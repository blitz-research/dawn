# Copyright 2023 The Tint Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

################################################################################
# File generated by 'tools/src/cmd/gen' using the template:
#   tools/src/cmd/gen/build/BUILD.bazel.tmpl
#
# To regenerate run: './tools/run gen'
#
#                       Do not modify this file directly
################################################################################

load("//src/tint:flags.bzl", "COPTS")
load("@bazel_skylib//lib:selects.bzl", "selects")
cc_library(
  name = "sem",
  srcs = [
    "accessor_expression.cc",
    "array.cc",
    "array_count.cc",
    "behavior.cc",
    "block_statement.cc",
    "break_if_statement.cc",
    "builtin_enum_expression.cc",
    "builtin_fn.cc",
    "call.cc",
    "call_target.cc",
    "expression.cc",
    "for_loop_statement.cc",
    "function.cc",
    "function_expression.cc",
    "if_statement.cc",
    "index_accessor_expression.cc",
    "info.cc",
    "load.cc",
    "loop_statement.cc",
    "materialize.cc",
    "member_accessor_expression.cc",
    "module.cc",
    "node.cc",
    "statement.cc",
    "struct.cc",
    "switch_statement.cc",
    "type_expression.cc",
    "value_constructor.cc",
    "value_conversion.cc",
    "value_expression.cc",
    "variable.cc",
    "while_statement.cc",
  ],
  hdrs = [
    "accessor_expression.h",
    "array.h",
    "array_count.h",
    "behavior.h",
    "block_statement.h",
    "break_if_statement.h",
    "builtin_enum_expression.h",
    "builtin_fn.h",
    "call.h",
    "call_target.h",
    "expression.h",
    "for_loop_statement.h",
    "function.h",
    "function_expression.h",
    "if_statement.h",
    "index_accessor_expression.h",
    "info.h",
    "load.h",
    "loop_statement.h",
    "materialize.h",
    "member_accessor_expression.h",
    "module.h",
    "node.h",
    "pipeline_stage_set.h",
    "sampler_texture_pair.h",
    "statement.h",
    "struct.h",
    "switch_statement.h",
    "type_expression.h",
    "type_mappings.h",
    "value_constructor.h",
    "value_conversion.h",
    "value_expression.h",
    "variable.h",
    "while_statement.h",
  ],
  deps = [
    "//src/tint/api/common",
    "//src/tint/lang/core",
    "//src/tint/lang/core/constant",
    "//src/tint/lang/core/type",
    "//src/tint/lang/wgsl",
    "//src/tint/lang/wgsl/ast",
    "//src/tint/utils/containers",
    "//src/tint/utils/diagnostic",
    "//src/tint/utils/ice",
    "//src/tint/utils/id",
    "//src/tint/utils/macros",
    "//src/tint/utils/math",
    "//src/tint/utils/memory",
    "//src/tint/utils/reflection",
    "//src/tint/utils/result",
    "//src/tint/utils/rtti",
    "//src/tint/utils/symbol",
    "//src/tint/utils/text",
    "//src/tint/utils/traits",
  ],
  copts = COPTS,
  visibility = ["//visibility:public"],
)
cc_library(
  name = "test",
  alwayslink = True,
  srcs = [
    "builtin_fn_test.cc",
    "diagnostic_severity_test.cc",
    "helper_test.h",
    "struct_test.cc",
    "value_expression_test.cc",
  ],
  deps = [
    "//src/tint/api/common",
    "//src/tint/lang/core",
    "//src/tint/lang/core/constant",
    "//src/tint/lang/core/type",
    "//src/tint/lang/wgsl",
    "//src/tint/lang/wgsl/ast",
    "//src/tint/lang/wgsl/program",
    "//src/tint/lang/wgsl/resolver",
    "//src/tint/lang/wgsl/sem",
    "//src/tint/utils/containers",
    "//src/tint/utils/diagnostic",
    "//src/tint/utils/ice",
    "//src/tint/utils/id",
    "//src/tint/utils/macros",
    "//src/tint/utils/math",
    "//src/tint/utils/memory",
    "//src/tint/utils/reflection",
    "//src/tint/utils/result",
    "//src/tint/utils/rtti",
    "//src/tint/utils/symbol",
    "//src/tint/utils/text",
    "//src/tint/utils/traits",
    "@gtest",
  ],
  copts = COPTS,
  visibility = ["//visibility:public"],
)

