# Copyright 2023 The Tint Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

################################################################################
# File generated by 'tools/src/cmd/gen' using the template:
#   tools/src/cmd/gen/build/BUILD.bazel.tmpl
#
# To regenerate run: './tools/run gen'
#
#                       Do not modify this file directly
################################################################################

load("//src/tint:flags.bzl", "COPTS")
load("@bazel_skylib//lib:selects.bzl", "selects")
cc_library(
  name = "type",
  srcs = [
    "abstract_float.cc",
    "abstract_int.cc",
    "abstract_numeric.cc",
    "array.cc",
    "array_count.cc",
    "atomic.cc",
    "bool.cc",
    "builtin_structs.cc",
    "depth_multisampled_texture.cc",
    "depth_texture.cc",
    "external_texture.cc",
    "f16.cc",
    "f32.cc",
    "i32.cc",
    "manager.cc",
    "matrix.cc",
    "multisampled_texture.cc",
    "node.cc",
    "numeric_scalar.cc",
    "pointer.cc",
    "reference.cc",
    "sampled_texture.cc",
    "sampler.cc",
    "sampler_kind.cc",
    "scalar.cc",
    "storage_texture.cc",
    "struct.cc",
    "texture.cc",
    "texture_dimension.cc",
    "type.cc",
    "u32.cc",
    "unique_node.cc",
    "vector.cc",
    "void.cc",
  ],
  hdrs = [
    "abstract_float.h",
    "abstract_int.h",
    "abstract_numeric.h",
    "array.h",
    "array_count.h",
    "atomic.h",
    "bool.h",
    "builtin_structs.h",
    "clone_context.h",
    "depth_multisampled_texture.h",
    "depth_texture.h",
    "external_texture.h",
    "f16.h",
    "f32.h",
    "i32.h",
    "manager.h",
    "matrix.h",
    "multisampled_texture.h",
    "node.h",
    "numeric_scalar.h",
    "pointer.h",
    "reference.h",
    "sampled_texture.h",
    "sampler.h",
    "sampler_kind.h",
    "scalar.h",
    "storage_texture.h",
    "struct.h",
    "texture.h",
    "texture_dimension.h",
    "type.h",
    "u32.h",
    "unique_node.h",
    "vector.h",
    "void.h",
  ],
  deps = [
    "//src/tint/lang/core",
    "//src/tint/utils/containers",
    "//src/tint/utils/diagnostic",
    "//src/tint/utils/ice",
    "//src/tint/utils/id",
    "//src/tint/utils/macros",
    "//src/tint/utils/math",
    "//src/tint/utils/memory",
    "//src/tint/utils/result",
    "//src/tint/utils/rtti",
    "//src/tint/utils/symbol",
    "//src/tint/utils/text",
    "//src/tint/utils/traits",
  ],
  copts = COPTS,
  visibility = ["//visibility:public"],
)
cc_library(
  name = "test",
  alwayslink = True,
  srcs = [
    "array_test.cc",
    "atomic_test.cc",
    "bool_test.cc",
    "builtin_structs_test.cc",
    "depth_multisampled_texture_test.cc",
    "depth_texture_test.cc",
    "external_texture_test.cc",
    "f16_test.cc",
    "f32_test.cc",
    "helper_test.h",
    "i32_test.cc",
    "manager_test.cc",
    "matrix_test.cc",
    "multisampled_texture_test.cc",
    "pointer_test.cc",
    "reference_test.cc",
    "sampled_texture_test.cc",
    "sampler_test.cc",
    "storage_texture_test.cc",
    "struct_test.cc",
    "texture_test.cc",
    "type_test.cc",
    "u32_test.cc",
    "vector_test.cc",
  ],
  deps = [
    "//src/tint/api/common",
    "//src/tint/lang/core",
    "//src/tint/lang/core/constant",
    "//src/tint/lang/core/type",
    "//src/tint/lang/wgsl",
    "//src/tint/lang/wgsl/ast",
    "//src/tint/lang/wgsl/program",
    "//src/tint/lang/wgsl/resolver",
    "//src/tint/lang/wgsl/sem",
    "//src/tint/utils/containers",
    "//src/tint/utils/diagnostic",
    "//src/tint/utils/ice",
    "//src/tint/utils/id",
    "//src/tint/utils/macros",
    "//src/tint/utils/math",
    "//src/tint/utils/memory",
    "//src/tint/utils/reflection",
    "//src/tint/utils/result",
    "//src/tint/utils/rtti",
    "//src/tint/utils/symbol",
    "//src/tint/utils/text",
    "//src/tint/utils/traits",
    "@gtest",
  ],
  copts = COPTS,
  visibility = ["//visibility:public"],
)

