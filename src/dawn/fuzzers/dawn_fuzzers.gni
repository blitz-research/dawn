# Copyright 2023 The Dawn Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Build flag for dawn lpm fuzzers

import("../../../scripts/dawn_overrides_with_defaults.gni")

import("//build_overrides/build.gni")
import("//testing/libfuzzer/fuzzer_test.gni")

declare_args() {
  is_dawn_lpm_fuzzer = is_linux
}

template("dawn_lpm_template") {
  # Extract some common parameters (if needed)
  assert(is_dawn_lpm_fuzzer)
  assert(defined(invoker.dawn_lpm_sources))
  assert(defined(invoker.defines))

  fuzzer_test("${target_name}") {
    sources = invoker.dawn_lpm_sources
    defines = invoker.defines
    deps = [
      ":dawn_lpm_proto",
      ":dawn_lpmfuzz_cpp",
      "${dawn_root}/src/dawn:cpp",
      "${dawn_root}/src/dawn:proc",
      "${dawn_root}/src/dawn/common",
      "${dawn_root}/src/dawn/native:static",
      "${dawn_root}/src/dawn/utils",
      "${dawn_root}/src/dawn/wire:static",
      "//third_party/libprotobuf-mutator",
    ]

    libfuzzer_options = [
      "max_len=2111000",
      "len_control=0",
    ]
  }
}
