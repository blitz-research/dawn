# Copyright 2023 The Dawn Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Adapted from https://source.chromium.org/chromium/chromium/src/+/main:build/win/message_compiler.gni;l=1?q=message_compiler.gni&sq=&ss=chromium

# To support cross-compilation from a non-Windows host to a Windows target,
# the files generated by mc.exe are expected to be copied and committed
# to "../win_build_output/". When running this script, the files in this
# directory are copied to $output_dir. On Windows hosts, the script will
# run mc.exe against the input source files, and validate that the generated
# files match what's in "../win_build_output/", failing if they do not.
# If mismatched, presumably the source files have changed, and the newly
# generated files should be copied and committed to "../win_build_output/".
#
# sources
#   List of message files to process.
#
# deps, public_deps, visibility
#   Normal meaning.
template("message_compiler") {
  extra_args = []
  if (defined(invoker.extra_args)) {
    extra_args = invoker.extra_args
  }

  output_dir = "$target_gen_dir"
  if (defined(invoker.output_dir)) {
    output_dir = invoker.output_dir
  }

  action_foreach(target_name) {
    forward_variables_from(invoker, [ "visibility" ])
    script = "build/message_compiler.py"
    outputs = [
      "$output_dir/{{source_name_part}}.h",
      "$output_dir/{{source_name_part}}.rc",
    ]

    args = [
      # The first argument is the environment file saved to the build
      # directory. This is required because the Windows toolchain setup saves
      # the VC paths and such so that running "mc.exe" will work with the
      # configured toolchain. This file is in the root build dir.
      "environment.$current_cpu",

      # Where to put the header.
      "-h",
      rebase_path(output_dir, root_build_dir),

      # Where to put the .rc file.
      "-r",
      rebase_path(output_dir, root_build_dir),

      # Input is Unicode.
      "-u",
    ]
    args += extra_args
    args += [ "{{source}}" ]

    forward_variables_from(invoker,
                           [
                             "deps",
                             "public_deps",
                             "sources",
                           ])
  }
}
