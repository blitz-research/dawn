#include <metal_stdlib>

using namespace metal;
int2 tint_insert_bits(int2 v, int2 n, uint offset, uint count) {
  uint const s = min(offset, 32u);
  uint const e = min(32u, (s + count));
  return insert_bits(v, n, s, (e - s));
}

void insertBits_fe6ba6(device int2* const tint_symbol_1) {
  int2 arg_0 = int2(1);
  int2 arg_1 = int2(1);
  uint arg_2 = 1u;
  uint arg_3 = 1u;
  int2 res = tint_insert_bits(arg_0, arg_1, arg_2, arg_3);
  *(tint_symbol_1) = res;
}

struct tint_symbol {
  float4 value [[position]];
};

float4 vertex_main_inner(device int2* const tint_symbol_2) {
  insertBits_fe6ba6(tint_symbol_2);
  return float4(0.0f);
}

vertex tint_symbol vertex_main(device int2* tint_symbol_3 [[buffer(0)]]) {
  float4 const inner_result = vertex_main_inner(tint_symbol_3);
  tint_symbol wrapper_result = {};
  wrapper_result.value = inner_result;
  return wrapper_result;
}

fragment void fragment_main(device int2* tint_symbol_4 [[buffer(0)]]) {
  insertBits_fe6ba6(tint_symbol_4);
  return;
}

kernel void compute_main(device int2* tint_symbol_5 [[buffer(0)]]) {
  insertBits_fe6ba6(tint_symbol_5);
  return;
}

