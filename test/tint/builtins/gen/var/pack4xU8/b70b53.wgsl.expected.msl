#include <metal_stdlib>

using namespace metal;

template<typename T>
T tint_dot4(vec<T,4> a, vec<T,4> b) {
  return a[0]*b[0] + a[1]*b[1] + a[2]*b[2] + a[3]*b[3];
}
uint tint_pack_4xu8(uint4 a) {
  uint4 const a_u8 = ((a & uint4(255u)) << uint4(0u, 8u, 16u, 24u));
  return tint_dot4(a_u8, uint4(1u));
}

void pack4xU8_b70b53(device uint* const tint_symbol_1) {
  uint4 arg_0 = uint4(1u);
  uint res = tint_pack_4xu8(arg_0);
  *(tint_symbol_1) = res;
}

struct tint_symbol {
  float4 value [[position]];
};

float4 vertex_main_inner(device uint* const tint_symbol_2) {
  pack4xU8_b70b53(tint_symbol_2);
  return float4(0.0f);
}

vertex tint_symbol vertex_main(device uint* tint_symbol_3 [[buffer(0)]]) {
  float4 const inner_result = vertex_main_inner(tint_symbol_3);
  tint_symbol wrapper_result = {};
  wrapper_result.value = inner_result;
  return wrapper_result;
}

fragment void fragment_main(device uint* tint_symbol_4 [[buffer(0)]]) {
  pack4xU8_b70b53(tint_symbol_4);
  return;
}

kernel void compute_main(device uint* tint_symbol_5 [[buffer(0)]]) {
  pack4xU8_b70b53(tint_symbol_5);
  return;
}

