#include <metal_stdlib>

using namespace metal;
int tint_first_leading_bit(int v) {
  uint x = select(uint(v), uint(~(v)), (v < 0));
  uint const b16 = select(0u, 16u, bool((x & 4294901760u)));
  x = (x >> b16);
  uint const b8 = select(0u, 8u, bool((x & 65280u)));
  x = (x >> b8);
  uint const b4 = select(0u, 4u, bool((x & 240u)));
  x = (x >> b4);
  uint const b2 = select(0u, 2u, bool((x & 12u)));
  x = (x >> b2);
  uint const b1 = select(0u, 1u, bool((x & 2u)));
  uint const is_zero = select(0u, 4294967295u, (x == 0u));
  return int((((((b16 | b8) | b4) | b2) | b1) | is_zero));
}

void firstLeadingBit_57a1a3(device int* const tint_symbol_1) {
  int arg_0 = 1;
  int res = tint_first_leading_bit(arg_0);
  *(tint_symbol_1) = res;
}

struct tint_symbol {
  float4 value [[position]];
};

float4 vertex_main_inner(device int* const tint_symbol_2) {
  firstLeadingBit_57a1a3(tint_symbol_2);
  return float4(0.0f);
}

vertex tint_symbol vertex_main(device int* tint_symbol_3 [[buffer(0)]]) {
  float4 const inner_result = vertex_main_inner(tint_symbol_3);
  tint_symbol wrapper_result = {};
  wrapper_result.value = inner_result;
  return wrapper_result;
}

fragment void fragment_main(device int* tint_symbol_4 [[buffer(0)]]) {
  firstLeadingBit_57a1a3(tint_symbol_4);
  return;
}

kernel void compute_main(device int* tint_symbol_5 [[buffer(0)]]) {
  firstLeadingBit_57a1a3(tint_symbol_5);
  return;
}

