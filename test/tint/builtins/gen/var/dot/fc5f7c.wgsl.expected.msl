#include <metal_stdlib>

using namespace metal;

template<typename T>
T tint_dot2(vec<T,2> a, vec<T,2> b) {
  return a[0]*b[0] + a[1]*b[1];
}
void dot_fc5f7c(device int* const tint_symbol_1) {
  int2 arg_0 = int2(1);
  int2 arg_1 = int2(1);
  int res = tint_dot2(arg_0, arg_1);
  *(tint_symbol_1) = res;
}

struct tint_symbol {
  float4 value [[position]];
};

float4 vertex_main_inner(device int* const tint_symbol_2) {
  dot_fc5f7c(tint_symbol_2);
  return float4(0.0f);
}

vertex tint_symbol vertex_main(device int* tint_symbol_3 [[buffer(0)]]) {
  float4 const inner_result = vertex_main_inner(tint_symbol_3);
  tint_symbol wrapper_result = {};
  wrapper_result.value = inner_result;
  return wrapper_result;
}

fragment void fragment_main(device int* tint_symbol_4 [[buffer(0)]]) {
  dot_fc5f7c(tint_symbol_4);
  return;
}

kernel void compute_main(device int* tint_symbol_5 [[buffer(0)]]) {
  dot_fc5f7c(tint_symbol_5);
  return;
}

