#include <metal_stdlib>

using namespace metal;

template<typename T>
T tint_dot3(vec<T,3> a, vec<T,3> b) {
  return a[0]*b[0] + a[1]*b[1] + a[2]*b[2];
}
void dot_7548a0(device uint* const tint_symbol_1) {
  uint3 arg_0 = uint3(1u);
  uint3 arg_1 = uint3(1u);
  uint res = tint_dot3(arg_0, arg_1);
  *(tint_symbol_1) = res;
}

struct tint_symbol {
  float4 value [[position]];
};

float4 vertex_main_inner(device uint* const tint_symbol_2) {
  dot_7548a0(tint_symbol_2);
  return float4(0.0f);
}

vertex tint_symbol vertex_main(device uint* tint_symbol_3 [[buffer(0)]]) {
  float4 const inner_result = vertex_main_inner(tint_symbol_3);
  tint_symbol wrapper_result = {};
  wrapper_result.value = inner_result;
  return wrapper_result;
}

fragment void fragment_main(device uint* tint_symbol_4 [[buffer(0)]]) {
  dot_7548a0(tint_symbol_4);
  return;
}

kernel void compute_main(device uint* tint_symbol_5 [[buffer(0)]]) {
  dot_7548a0(tint_symbol_5);
  return;
}

