; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 90
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %compute_main "compute_main" %local_invocation_index_1_param_1
               OpExecutionMode %compute_main LocalSize 1 1 1
               OpName %local_invocation_index_1_param_1 "local_invocation_index_1_param_1"
               OpName %local_invocation_index_1 "local_invocation_index_1"
               OpName %S_atomic "S_atomic"
               OpMemberName %S_atomic 0 "x"
               OpMemberName %S_atomic 1 "a"
               OpMemberName %S_atomic 2 "y"
               OpName %wg "wg"
               OpName %tint_zero_workgroup_memory "tint_zero_workgroup_memory"
               OpName %local_idx "local_idx"
               OpName %idx_1 "idx_1"
               OpName %compute_main_inner "compute_main_inner"
               OpName %local_invocation_index_2 "local_invocation_index_2"
               OpName %idx "idx"
               OpName %compute_main_1 "compute_main_1"
               OpName %compute_main_inner_1 "compute_main_inner_1"
               OpName %local_invocation_index_1_param "local_invocation_index_1_param"
               OpName %compute_main "compute_main"
               OpDecorate %local_invocation_index_1_param_1 BuiltIn LocalInvocationIndex
               OpMemberDecorate %S_atomic 0 Offset 0
               OpMemberDecorate %S_atomic 1 Offset 4
               OpDecorate %_arr_uint_uint_10 ArrayStride 4
               OpMemberDecorate %S_atomic 2 Offset 44
       %uint = OpTypeInt 32 0
%_ptr_Input_uint = OpTypePointer Input %uint
%local_invocation_index_1_param_1 = OpVariable %_ptr_Input_uint Input
%_ptr_Private_uint = OpTypePointer Private %uint
          %6 = OpConstantNull %uint
%local_invocation_index_1 = OpVariable %_ptr_Private_uint Private %6
        %int = OpTypeInt 32 1
    %uint_10 = OpConstant %uint 10
%_arr_uint_uint_10 = OpTypeArray %uint %uint_10
   %S_atomic = OpTypeStruct %int %_arr_uint_uint_10 %uint
%_ptr_Workgroup_S_atomic = OpTypePointer Workgroup %S_atomic
         %wg = OpVariable %_ptr_Workgroup_S_atomic Workgroup
       %void = OpTypeVoid
         %13 = OpTypeFunction %void %uint
     %uint_1 = OpConstant %uint 1
       %bool = OpTypeBool
     %uint_0 = OpConstant %uint 0
%_ptr_Workgroup_int = OpTypePointer Workgroup %int
         %26 = OpConstantNull %int
     %uint_2 = OpConstant %uint 2
%_ptr_Workgroup_uint = OpTypePointer Workgroup %uint
%_ptr_Function_uint = OpTypePointer Function %uint
%_ptr_Workgroup_uint_0 = OpTypePointer Workgroup %uint
   %uint_264 = OpConstant %uint 264
      %int_4 = OpConstant %int 4
         %76 = OpTypeFunction %void
%tint_zero_workgroup_memory = OpFunction %void None %13
  %local_idx = OpFunctionParameter %uint
         %17 = OpLabel
      %idx_1 = OpVariable %_ptr_Function_uint Function %6
         %19 = OpULessThan %bool %local_idx %uint_1
               OpSelectionMerge %21 None
               OpBranchConditional %19 %22 %21
         %22 = OpLabel
         %25 = OpAccessChain %_ptr_Workgroup_int %wg %uint_0
               OpStore %25 %26
         %29 = OpAccessChain %_ptr_Workgroup_uint %wg %uint_2
               OpStore %29 %6
               OpBranch %21
         %21 = OpLabel
               OpStore %idx_1 %local_idx
               OpBranch %32
         %32 = OpLabel
               OpLoopMerge %33 %34 None
               OpBranch %35
         %35 = OpLabel
         %37 = OpLoad %uint %idx_1
         %38 = OpULessThan %bool %37 %uint_10
         %36 = OpLogicalNot %bool %38
               OpSelectionMerge %39 None
               OpBranchConditional %36 %40 %39
         %40 = OpLabel
               OpBranch %33
         %39 = OpLabel
         %41 = OpLoad %uint %idx_1
         %45 = OpAccessChain %_ptr_Workgroup_uint_0 %wg %uint_1 %41
               OpAtomicStore %45 %uint_2 %uint_0 %6
               OpBranch %34
         %34 = OpLabel
         %46 = OpLoad %uint %idx_1
         %47 = OpIAdd %uint %46 %uint_1
               OpStore %idx_1 %47
               OpBranch %32
         %33 = OpLabel
               OpControlBarrier %uint_2 %uint_2 %uint_264
               OpReturn
               OpFunctionEnd
%compute_main_inner = OpFunction %void None %13
%local_invocation_index_2 = OpFunctionParameter %uint
         %52 = OpLabel
        %idx = OpVariable %_ptr_Function_uint Function %6
               OpStore %idx %6
         %54 = OpAccessChain %_ptr_Workgroup_int %wg %uint_0
               OpStore %54 %26
         %55 = OpAccessChain %_ptr_Workgroup_uint %wg %uint_2
               OpStore %55 %6
               OpStore %idx %local_invocation_index_2
               OpBranch %56
         %56 = OpLabel
               OpLoopMerge %57 %58 None
               OpBranch %59
         %59 = OpLabel
         %61 = OpLoad %uint %idx
         %62 = OpULessThan %bool %61 %uint_10
         %60 = OpLogicalNot %bool %62
               OpSelectionMerge %63 None
               OpBranchConditional %60 %64 %63
         %64 = OpLabel
               OpBranch %57
         %63 = OpLabel
         %65 = OpLoad %uint %idx
         %68 = OpAccessChain %_ptr_Workgroup_uint_0 %wg %uint_1 %65
               OpAtomicStore %68 %uint_2 %uint_0 %6
               OpBranch %58
         %58 = OpLabel
         %69 = OpLoad %uint %idx
         %70 = OpIAdd %uint %69 %uint_1
               OpStore %idx %70
               OpBranch %56
         %57 = OpLabel
               OpControlBarrier %uint_2 %uint_2 %uint_264
         %75 = OpAccessChain %_ptr_Workgroup_uint_0 %wg %uint_1 %int_4
               OpAtomicStore %75 %uint_2 %uint_0 %uint_1
               OpReturn
               OpFunctionEnd
%compute_main_1 = OpFunction %void None %76
         %78 = OpLabel
         %79 = OpLoad %uint %local_invocation_index_1
         %80 = OpFunctionCall %void %compute_main_inner %79
               OpReturn
               OpFunctionEnd
%compute_main_inner_1 = OpFunction %void None %13
%local_invocation_index_1_param = OpFunctionParameter %uint
         %83 = OpLabel
         %84 = OpFunctionCall %void %tint_zero_workgroup_memory %local_invocation_index_1_param
               OpStore %local_invocation_index_1 %local_invocation_index_1_param
         %85 = OpFunctionCall %void %compute_main_1
               OpReturn
               OpFunctionEnd
%compute_main = OpFunction %void None %76
         %87 = OpLabel
         %89 = OpLoad %uint %local_invocation_index_1_param_1
         %88 = OpFunctionCall %void %compute_main_inner_1 %89
               OpReturn
               OpFunctionEnd
