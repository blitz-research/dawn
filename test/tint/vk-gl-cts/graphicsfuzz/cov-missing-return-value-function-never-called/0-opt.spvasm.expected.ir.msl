SKIP: FAILED

<dawn>/src/tint/lang/msl/writer/printer/printer.cc:355 internal compiler error: buf1 = struct @align(4) {
  one:u32 @offset(0)
}

strided_arr = struct @align(4) {
  el:i32 @offset(0)
}

buf0 = struct @align(4) {
  x_GLF_uniform_int_values:array<strided_arr, 1> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

%b1 = block {  # root
  %gl_FragCoord:ptr<private, vec4<f32>, read_write> = var
  %x_8:ptr<uniform, buf1, read> = var @binding_point(0, 1)
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
  %x_10:ptr<uniform, buf0, read> = var @binding_point(0, 0)
}

%func_ = func():f32 -> %b2 {
  %b2 = block {
    switch 1i [c: (0i, %b3), c: (default, %b4)] {  # switch_1
      %b3 = block {  # case
        ret 1.0f
      }
      %b4 = block {  # case
        exit_switch  # switch_1
      }
    }
    ret 0.0f
  }
}
%main_1 = func():void -> %b5 {
  %b5 = block {
    %v:ptr<function, vec4<f32>, read_write> = var
    store %v, vec4<f32>(1.0f)
    %8:f32 = load_vector_element %gl_FragCoord, 1u
    %9:bool = lt %8, 0.0f
    if %9 [t: %b6] {  # if_1
      %b6 = block {  # true
        %x_42:f32 = call %func_
        %11:vec4<f32> = construct %x_42
        store %v, %11
        exit_if  # if_1
      }
    }
    %12:vec4<f32> = load %v
    %13:u32 = pack4x8unorm %12
    %14:bool = eq %13, 1u
    if %14 [t: %b7] {  # if_2
      %b7 = block {  # true
        ret
      }
    }
    %15:ptr<uniform, u32, read> = access %x_8, 0u
    %16:u32 = load %15
    %17:u32 = shiftl 1u, %16
    %18:bool = eq %17, 2u
    if %18 [t: %b8, f: %b9] {  # if_3
      %b8 = block {  # true
        store %x_GLF_color, vec4<f32>(1.0f, 0.0f, 0.0f, 1.0f)
        exit_if  # if_3
      }
      %b9 = block {  # false
        %19:ptr<uniform, i32, read> = access %x_10, 0u, 0i, 0u
        %20:i32 = load %19
        %21:f32 = convert %20
        %22:vec4<f32> = construct %21
        store %x_GLF_color, %22
        exit_if  # if_3
      }
    }
    ret
  }
}
%tint_symbol = @fragment func(%gl_FragCoord_param:vec4<f32> [@position]):main_out -> %b10 {
  %b10 = block {
    store %gl_FragCoord, %gl_FragCoord_param
    %25:void = call %main_1
    %26:vec4<f32> = load %x_GLF_color
    %27:main_out = construct %26
    ret %27
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
