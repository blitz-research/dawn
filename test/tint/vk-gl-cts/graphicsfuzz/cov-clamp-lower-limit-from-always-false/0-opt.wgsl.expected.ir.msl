SKIP: FAILED

<dawn>/src/tint/lang/msl/writer/printer/printer.cc:355 internal compiler error: strided_arr = struct @align(4) {
  el:f32 @offset(0)
}

buf1 = struct @align(4) {
  x_GLF_uniform_float_values:array<strided_arr, 2> @offset(0)
}

strided_arr_1 = struct @align(4) {
  el:i32 @offset(0)
}

buf0 = struct @align(4) {
  x_GLF_uniform_int_values:array<strided_arr_1, 2> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

%b1 = block {  # root
  %x_7:ptr<uniform, buf1, read> = var @binding_point(0, 1)
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
  %x_9:ptr<uniform, buf0, read> = var @binding_point(0, 0)
}

%main_1 = func():void -> %b2 {
  %b2 = block {
    %a:ptr<function, f32, read_write> = var
    %b:ptr<function, f32, read_write> = var
    store %a, 1.0f
    %7:ptr<uniform, f32, read> = access %x_7, 0u, 1i, 0u
    %x_33:f32 = load %7
    %x_34:f32 = load %a
    %10:f32 = select 0.0f, %x_34, false
    %11:f32 = clamp %x_33, %10, 1.0f
    store %b, %11
    %x_37:f32 = load %b
    %13:ptr<uniform, f32, read> = access %x_7, 0u, 1i, 0u
    %x_39:f32 = load %13
    %15:bool = eq %x_37, %x_39
    if %15 [t: %b3, f: %b4] {  # if_1
      %b3 = block {  # true
        %x_44:f32 = load %b
        %17:ptr<uniform, f32, read> = access %x_7, 0u, 0i, 0u
        %x_46:f32 = load %17
        %19:ptr<uniform, i32, read> = access %x_9, 0u, 0i, 0u
        %x_49:i32 = load %19
        %21:ptr<uniform, i32, read> = access %x_9, 0u, 0i, 0u
        %x_52:i32 = load %21
        %23:ptr<uniform, i32, read> = access %x_9, 0u, 1i, 0u
        %x_55:i32 = load %23
        %25:f32 = mul %x_44, %x_46
        %26:f32 = convert %x_49
        %27:f32 = convert %x_52
        %28:f32 = convert %x_55
        %29:vec4<f32> = construct %25, %26, %27, %28
        store %x_GLF_color, %29
        exit_if  # if_1
      }
      %b4 = block {  # false
        %30:ptr<uniform, i32, read> = access %x_9, 0u, 0i, 0u
        %x_59:i32 = load %30
        %x_60:f32 = convert %x_59
        %33:vec4<f32> = construct %x_60, %x_60, %x_60, %x_60
        store %x_GLF_color, %33
        exit_if  # if_1
      }
    }
    ret
  }
}
%tint_symbol = @fragment func():main_out -> %b5 {
  %b5 = block {
    %35:void = call %main_1
    %36:vec4<f32> = load %x_GLF_color
    %37:main_out = construct %36
    ret %37
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
