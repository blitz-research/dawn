SKIP: FAILED

<dawn>/src/tint/lang/msl/writer/printer/printer.cc:355 internal compiler error: strided_arr = struct @align(4) {
  el:i32 @offset(0)
}

buf0 = struct @align(4) {
  x_GLF_uniform_int_values:array<strided_arr, 4> @offset(0)
}

buf1 = struct @align(4) {
  zero:i32 @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

%b1 = block {  # root
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
  %x_5:ptr<uniform, buf0, read> = var @binding_point(0, 0)
  %x_7:ptr<uniform, buf1, read> = var @binding_point(0, 1)
}

%main_1 = func():void -> %b2 {
  %b2 = block {
    %5:ptr<uniform, i32, read> = access %x_5, 0u, 0i, 0u
    %6:i32 = load %5
    %7:f32 = convert %6
    %8:ptr<uniform, i32, read> = access %x_5, 0u, 1i, 0u
    %9:i32 = load %8
    %10:f32 = convert %9
    %11:ptr<uniform, i32, read> = access %x_5, 0u, 1i, 0u
    %12:i32 = load %11
    %13:f32 = convert %12
    %14:ptr<uniform, i32, read> = access %x_5, 0u, 0i, 0u
    %15:i32 = load %14
    %16:f32 = convert %15
    %17:vec4<f32> = construct %7, %10, %13, %16
    store %x_GLF_color, %17
    loop [b: %b3, c: %b4] {  # loop_1
      %b3 = block {  # body
        %18:ptr<uniform, i32, read> = access %x_7, 0u
        %19:i32 = load %18
        %20:ptr<uniform, i32, read> = access %x_5, 0u, 0i, 0u
        %21:i32 = load %20
        %22:bool = eq %19, %21
        if %22 [t: %b5] {  # if_1
          %b5 = block {  # true
            continue %b4
          }
        }
        %23:ptr<uniform, i32, read> = access %x_7, 0u
        %24:i32 = load %23
        %25:ptr<uniform, i32, read> = access %x_5, 0u, 2i, 0u
        %26:i32 = load %25
        %27:bool = eq %24, %26
        if %27 [t: %b6] {  # if_2
          %b6 = block {  # true
            exit_loop  # loop_1
          }
        }
        %28:ptr<uniform, i32, read> = access %x_7, 0u
        %29:i32 = load %28
        %30:ptr<uniform, i32, read> = access %x_5, 0u, 3i, 0u
        %31:i32 = load %30
        %32:bool = eq %29, %31
        if %32 [t: %b7] {  # if_3
          %b7 = block {  # true
            discard
            exit_if  # if_3
          }
        }
        ret
      }
      %b4 = block {  # continuing
        break_if true %b3
      }
    }
    %33:ptr<uniform, i32, read> = access %x_5, 0u, 1i, 0u
    %34:i32 = load %33
    %35:f32 = convert %34
    %36:vec4<f32> = construct %35
    store %x_GLF_color, %36
    ret
  }
}
%tint_symbol = @fragment func():main_out -> %b8 {
  %b8 = block {
    %38:void = call %main_1
    %39:vec4<f32> = load %x_GLF_color
    %40:main_out = construct %39
    ret %40
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
