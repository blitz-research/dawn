SKIP: FAILED

<dawn>/src/tint/lang/msl/writer/printer/printer.cc:355 internal compiler error: strided_arr = struct @align(4) {
  el:f32 @offset(0)
}

buf0 = struct @align(4) {
  x_GLF_uniform_float_values:array<strided_arr, 2> @offset(0)
}

strided_arr_1 = struct @align(4) {
  el:i32 @offset(0)
}

buf1 = struct @align(4) {
  x_GLF_uniform_int_values:array<strided_arr_1, 2> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

%b1 = block {  # root
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
  %x_6:ptr<uniform, buf0, read> = var @binding_point(0, 0)
  %gl_FragCoord:ptr<private, vec4<f32>, read_write> = var
  %x_8:ptr<uniform, buf1, read> = var @binding_point(0, 1)
}

%main_1 = func():void -> %b2 {
  %b2 = block {
    %6:ptr<uniform, f32, read> = access %x_6, 0u, 1i, 0u
    %7:f32 = load %6
    %8:vec4<f32> = construct %7
    store %x_GLF_color, %8
    %9:ptr<uniform, f32, read> = access %x_6, 0u, 0i, 0u
    %x_36:f32 = load %9
    %11:f32 = load_vector_element %gl_FragCoord, 1u
    %12:bool = gte %11, %x_36
    if %12 [t: %b3] {  # if_1
      %b3 = block {  # true
        %13:ptr<uniform, i32, read> = access %x_8, 0u, 1i, 0u
        %x_41:i32 = load %13
        switch %x_41 [c: (0i 16i, %b4), c: (default, %b5)] {  # switch_1
          %b4 = block {  # case
            %15:ptr<uniform, i32, read> = access %x_8, 0u, 0i, 0u
            %16:i32 = load %15
            %x_46:f32 = convert %16
            %x_47:f32 = convert %x_41
            %19:vec4<f32> = construct %x_46, %x_47, %x_47, %x_46
            store %x_GLF_color, %19
            exit_switch  # switch_1
          }
          %b5 = block {  # case
            exit_switch  # switch_1
          }
        }
        exit_if  # if_1
      }
    }
    %20:ptr<uniform, i32, read> = access %x_8, 0u, 1i, 0u
    %21:i32 = load %20
    %22:ptr<uniform, i32, read> = access %x_8, 0u, 0i, 0u
    %23:i32 = load %22
    %24:bool = eq %21, %23
    if %24 [t: %b6] {  # if_2
      %b6 = block {  # true
        %25:vec4<f32> = construct %x_36
        store %x_GLF_color, %25
        exit_if  # if_2
      }
    }
    ret
  }
}
%tint_symbol = @fragment func(%gl_FragCoord_param:vec4<f32> [@position]):main_out -> %b7 {
  %b7 = block {
    store %gl_FragCoord, %gl_FragCoord_param
    %28:void = call %main_1
    %29:vec4<f32> = load %x_GLF_color
    %30:main_out = construct %29
    ret %30
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
