SKIP: FAILED

<dawn>/src/tint/lang/msl/writer/printer/printer.cc:355 internal compiler error: strided_arr = struct @align(4) {
  el:i32 @offset(0)
}

buf1 = struct @align(4) {
  x_GLF_uniform_int_values:array<strided_arr, 3> @offset(0)
}

strided_arr_1 = struct @align(4) {
  el:f32 @offset(0)
}

buf0 = struct @align(4) {
  x_GLF_uniform_float_values:array<strided_arr_1, 1> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

%b1 = block {  # root
  %x_7:ptr<uniform, buf1, read> = var @binding_point(0, 1)
  %gl_FragCoord:ptr<private, vec4<f32>, read_write> = var
  %x_11:ptr<uniform, buf0, read> = var @binding_point(0, 0)
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
}

%main_1 = func():void -> %b2 {
  %b2 = block {
    %i:ptr<function, i32, read_write> = var
    %arr:ptr<function, array<i32, 2>, read_write> = var
    %a:ptr<function, i32, read_write> = var
    %9:ptr<uniform, i32, read> = access %x_7, 0u, 0i, 0u
    %x_40:i32 = load %9
    store %i, %x_40
    loop [b: %b3, c: %b4] {  # loop_1
      %b3 = block {  # body
        %x_45:i32 = load %i
        %12:ptr<uniform, i32, read> = access %x_7, 0u, 2i, 0u
        %x_47:i32 = load %12
        %14:bool = lt %x_45, %x_47
        if %14 [t: %b5, f: %b6] {  # if_1
          %b5 = block {  # true
            exit_if  # if_1
          }
          %b6 = block {  # false
            exit_loop  # loop_1
          }
        }
        %x_50:i32 = load %i
        %16:ptr<uniform, i32, read> = access %x_7, 0u, 0i, 0u
        %x_52:i32 = load %16
        %18:ptr<function, i32, read_write> = access %arr, %x_50
        store %18, %x_52
        continue %b4
      }
      %b4 = block {  # continuing
        %x_54:i32 = load %i
        %20:i32 = add %x_54, 1i
        store %i, %20
        next_iteration %b3
      }
    }
    store %a, -1i
    %x_57:f32 = load_vector_element %gl_FragCoord, 1u
    %22:ptr<uniform, f32, read> = access %x_11, 0u, 0i, 0u
    %x_59:f32 = load %22
    %24:bool = lt %x_57, %x_59
    %25:bool = eq %24, false
    if %25 [t: %b7] {  # if_2
      %b7 = block {  # true
        %x_64:i32 = load %a
        %x_65:i32 = add %x_64, 1i
        store %a, %x_65
        %28:ptr<uniform, i32, read> = access %x_7, 0u, 1i, 0u
        %x_67:i32 = load %28
        %30:ptr<function, i32, read_write> = access %arr, %x_65
        store %30, %x_67
        exit_if  # if_2
      }
    }
    %x_69:i32 = load %a
    %x_70:i32 = add %x_69, 1i
    store %a, %x_70
    %33:ptr<uniform, i32, read> = access %x_7, 0u, 2i, 0u
    %x_72:i32 = load %33
    %35:ptr<function, i32, read_write> = access %arr, %x_70
    store %35, %x_72
    %36:ptr<uniform, i32, read> = access %x_7, 0u, 0i, 0u
    %x_75:i32 = load %36
    %38:ptr<function, i32, read_write> = access %arr, %x_75
    %x_77:i32 = load %38
    %40:ptr<uniform, i32, read> = access %x_7, 0u, 1i, 0u
    %x_79:i32 = load %40
    %42:bool = eq %x_77, %x_79
    if %42 [t: %b8, f: %b9] {  # if_3
      %b8 = block {  # true
        %x_84:i32 = load %a
        %44:ptr<uniform, i32, read> = access %x_7, 0u, 0i, 0u
        %x_87:i32 = load %44
        %46:ptr<uniform, i32, read> = access %x_7, 0u, 0i, 0u
        %x_90:i32 = load %46
        %x_92:i32 = load %a
        %49:f32 = convert %x_84
        %50:f32 = convert %x_87
        %51:f32 = convert %x_90
        %52:f32 = convert %x_92
        %53:vec4<f32> = construct %49, %50, %51, %52
        store %x_GLF_color, %53
        exit_if  # if_3
      }
      %b9 = block {  # false
        %54:ptr<uniform, i32, read> = access %x_7, 0u, 0i, 0u
        %x_96:i32 = load %54
        %x_97:f32 = convert %x_96
        %57:vec4<f32> = construct %x_97, %x_97, %x_97, %x_97
        store %x_GLF_color, %57
        exit_if  # if_3
      }
    }
    ret
  }
}
%tint_symbol = @fragment func(%gl_FragCoord_param:vec4<f32> [@position]):main_out -> %b10 {
  %b10 = block {
    store %gl_FragCoord, %gl_FragCoord_param
    %60:void = call %main_1
    %61:vec4<f32> = load %x_GLF_color
    %62:main_out = construct %61
    ret %62
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
