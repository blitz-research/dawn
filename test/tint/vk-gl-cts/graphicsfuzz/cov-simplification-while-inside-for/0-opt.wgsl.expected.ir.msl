SKIP: FAILED

<dawn>/src/tint/lang/msl/writer/printer/printer.cc:355 internal compiler error: buf0 = struct @align(4) {
  one:i32 @offset(0)
}

buf1 = struct @align(4) {
  zero:i32 @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

%b1 = block {  # root
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
  %x_6:ptr<uniform, buf0, read> = var @binding_point(0, 0)
  %x_9:ptr<uniform, buf1, read> = var @binding_point(0, 1)
}

%main_1 = func():void -> %b2 {
  %b2 = block {
    %i:ptr<function, i32, read_write> = var
    %v:ptr<function, vec4<f32>, read_write> = var
    store %x_GLF_color, vec4<f32>(0.0f)
    store %i, 0i
    loop [b: %b3, c: %b4] {  # loop_1
      %b3 = block {  # body
        %x_38:i32 = load %i
        %8:ptr<uniform, i32, read> = access %x_6, 0u
        %x_40:i32 = load %8
        %10:bool = lt %x_38, %x_40
        if %10 [t: %b5, f: %b6] {  # if_1
          %b5 = block {  # true
            exit_if  # if_1
          }
          %b6 = block {  # false
            exit_loop  # loop_1
          }
        }
        loop [b: %b7, c: %b8] {  # loop_2
          %b7 = block {  # body
            %11:ptr<uniform, i32, read> = access %x_6, 0u
            %x_48:i32 = load %11
            %13:bool = eq %x_48, 1i
            if %13 [t: %b9] {  # if_2
              %b9 = block {  # true
                store %x_GLF_color, vec4<f32>(1.0f, 0.0f, 0.0f, 1.0f)
                exit_if  # if_2
              }
            }
            continue %b8
          }
          %b8 = block {  # continuing
            break_if true %b7
          }
        }
        continue %b4
      }
      %b4 = block {  # continuing
        %x_52:i32 = load %i
        %15:i32 = add %x_52, 1i
        store %i, %15
        next_iteration %b3
      }
    }
    %16:ptr<uniform, i32, read> = access %x_9, 0u
    %x_55:i32 = load %16
    %18:f32 = convert %x_55
    store_vector_element %v, 1u, %18
    %x_59:f32 = load_vector_element %v, 1u
    store_vector_element %x_GLF_color, 1u, %x_59
    ret
  }
}
%tint_symbol = @fragment func():main_out -> %b10 {
  %b10 = block {
    %21:void = call %main_1
    %22:vec4<f32> = load %x_GLF_color
    %23:main_out = construct %22
    ret %23
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
