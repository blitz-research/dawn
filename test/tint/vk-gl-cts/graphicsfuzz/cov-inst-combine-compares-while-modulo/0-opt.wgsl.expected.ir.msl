SKIP: FAILED

<dawn>/src/tint/lang/msl/writer/printer/printer.cc:355 internal compiler error: strided_arr = struct @align(4) {
  el:i32 @offset(0)
}

buf1 = struct @align(4) {
  x_GLF_uniform_int_values:array<strided_arr, 3> @offset(0)
}

strided_arr_1 = struct @align(4) {
  el:f32 @offset(0)
}

buf0 = struct @align(4) {
  x_GLF_uniform_float_values:array<strided_arr_1, 1> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

%b1 = block {  # root
  %x_6:ptr<uniform, buf1, read> = var @binding_point(0, 1)
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
  %x_8:ptr<uniform, buf0, read> = var @binding_point(0, 0)
}

%main_1 = func():void -> %b2 {
  %b2 = block {
    %i:ptr<function, i32, read_write> = var
    %6:ptr<uniform, i32, read> = access %x_6, 0u, 2i, 0u
    %x_32:i32 = load %6
    store %i, %x_32
    loop [b: %b3, c: %b4] {  # loop_1
      %b3 = block {  # body
        %x_37:i32 = load %i
        %9:bool = gte %x_37, 0i
        if %9 [t: %b5, f: %b6] {  # if_1
          %b5 = block {  # true
            exit_if  # if_1
          }
          %b6 = block {  # false
            exit_loop  # loop_1
          }
        }
        %x_40:i32 = load %i
        %11:i32 = mod %x_40, 2i
        %12:bool = eq %11, 0i
        if %12 [t: %b7, f: %b8] {  # if_2
          %b7 = block {  # true
            %13:ptr<uniform, i32, read> = access %x_6, 0u, 0i, 0u
            %x_47:i32 = load %13
            %15:ptr<uniform, i32, read> = access %x_6, 0u, 0i, 0u
            %x_50:i32 = load %15
            %17:ptr<uniform, i32, read> = access %x_6, 0u, 1i, 0u
            %x_53:i32 = load %17
            %19:f32 = convert %x_47
            %20:f32 = convert %x_50
            %21:f32 = convert %x_53
            %22:vec4<f32> = construct 1.0f, %19, %20, %21
            store %x_GLF_color, %22
            exit_if  # if_2
          }
          %b8 = block {  # false
            %23:ptr<uniform, f32, read> = access %x_8, 0u, 0i, 0u
            %x_57:f32 = load %23
            %25:vec4<f32> = construct %x_57, %x_57, %x_57, %x_57
            store %x_GLF_color, %25
            exit_if  # if_2
          }
        }
        %x_59:i32 = load %i
        %27:i32 = sub %x_59, 1i
        store %i, %27
        continue %b4
      }
      %b4 = block {  # continuing
        next_iteration %b3
      }
    }
    ret
  }
}
%tint_symbol = @fragment func():main_out -> %b9 {
  %b9 = block {
    %29:void = call %main_1
    %30:vec4<f32> = load %x_GLF_color
    %31:main_out = construct %30
    ret %31
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
