SKIP: FAILED

<dawn>/src/tint/lang/msl/writer/printer/printer.cc:355 internal compiler error: strided_arr = struct @align(4) {
  el:f32 @offset(0)
}

buf0 = struct @align(4) {
  x_GLF_uniform_float_values:array<strided_arr, 2> @offset(0)
}

strided_arr_1 = struct @align(4) {
  el:i32 @offset(0)
}

buf1 = struct @align(4) {
  x_GLF_uniform_int_values:array<strided_arr_1, 2> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

%b1 = block {  # root
  %x_7:ptr<uniform, buf0, read> = var @binding_point(0, 0)
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
  %x_11:ptr<uniform, buf1, read> = var @binding_point(0, 1)
}

%func_ = func():vec2<f32> -> %b2 {
  %b2 = block {
    %v:ptr<function, vec2<f32>, read_write> = var
    %a:ptr<function, i32, read_write> = var
    %indexable:ptr<function, array<vec2<f32>, 3>, read_write> = var
    %8:ptr<uniform, f32, read> = access %x_7, 0u, 0i, 0u
    %9:f32 = load %8
    store_vector_element %v, 1u, %9
    store %a, 2i
    %x_77:i32 = load %a
    %11:ptr<uniform, f32, read> = access %x_7, 0u, 1i, 0u
    %12:f32 = load %11
    %13:vec2<f32> = construct %12
    %14:ptr<uniform, f32, read> = access %x_7, 0u, 1i, 0u
    %15:f32 = load %14
    %16:vec2<f32> = construct %15
    %17:vec2<f32> = load %v
    %18:array<vec2<f32>, 3> = construct %13, %16, %17
    store %indexable, %18
    %19:ptr<function, vec2<f32>, read_write> = access %indexable, %x_77
    %x_79:vec2<f32> = load %19
    ret %x_79
  }
}
%main_1 = func():void -> %b3 {
  %b3 = block {
    %x_40:vec2<f32> = call %func_
    %23:f32 = access %x_40, 1u
    %24:ptr<uniform, f32, read> = access %x_7, 0u, 0i, 0u
    %25:f32 = load %24
    %26:bool = eq %23, %25
    if %26 [t: %b4, f: %b5] {  # if_1
      %b4 = block {  # true
        %27:ptr<uniform, i32, read> = access %x_11, 0u, 0i, 0u
        %28:i32 = load %27
        %29:f32 = convert %28
        %30:ptr<uniform, i32, read> = access %x_11, 0u, 1i, 0u
        %31:i32 = load %30
        %32:f32 = convert %31
        %33:ptr<uniform, i32, read> = access %x_11, 0u, 1i, 0u
        %34:i32 = load %33
        %35:f32 = convert %34
        %36:ptr<uniform, i32, read> = access %x_11, 0u, 0i, 0u
        %37:i32 = load %36
        %38:f32 = convert %37
        %39:vec4<f32> = construct %29, %32, %35, %38
        store %x_GLF_color, %39
        exit_if  # if_1
      }
      %b5 = block {  # false
        %40:ptr<uniform, i32, read> = access %x_11, 0u, 1i, 0u
        %41:i32 = load %40
        %42:f32 = convert %41
        %43:vec4<f32> = construct %42
        store %x_GLF_color, %43
        exit_if  # if_1
      }
    }
    ret
  }
}
%tint_symbol = @fragment func():main_out -> %b6 {
  %b6 = block {
    %45:void = call %main_1
    %46:vec4<f32> = load %x_GLF_color
    %47:main_out = construct %46
    ret %47
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
