SKIP: FAILED

<dawn>/src/tint/lang/msl/writer/printer/printer.cc:355 internal compiler error: strided_arr = struct @align(4) {
  el:f32 @offset(0)
}

buf0 = struct @align(4) {
  x_GLF_uniform_float_values:array<strided_arr, 2> @offset(0)
}

strided_arr_1 = struct @align(4) {
  el:i32 @offset(0)
}

buf1 = struct @align(4) {
  x_GLF_uniform_int_values:array<strided_arr_1, 3> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

%b1 = block {  # root
  %x_6:ptr<uniform, buf0, read> = var @binding_point(0, 0)
  %x_9:ptr<uniform, buf1, read> = var @binding_point(0, 1)
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
}

%main_1 = func():void -> %b2 {
  %b2 = block {
    %sums:ptr<function, array<f32, 3>, read_write> = var
    %i:ptr<function, i32, read_write> = var
    %indexable:ptr<function, mat2x4<f32>, read_write> = var
    %8:ptr<uniform, f32, read> = access %x_6, 0u, 0i, 0u
    %9:f32 = load %8
    %10:ptr<uniform, f32, read> = access %x_6, 0u, 0i, 0u
    %11:f32 = load %10
    %12:ptr<uniform, f32, read> = access %x_6, 0u, 0i, 0u
    %13:f32 = load %12
    %14:array<f32, 3> = construct %9, %11, %13
    store %sums, %14
    store %i, 0i
    loop [b: %b3, c: %b4] {  # loop_1
      %b3 = block {  # body
        %15:i32 = load %i
        %16:ptr<uniform, i32, read> = access %x_9, 0u, 0i, 0u
        %17:i32 = load %16
        %18:ptr<uniform, i32, read> = access %x_9, 0u, 0i, 0u
        %19:i32 = load %18
        %20:i32 = clamp %17, %19, 2i
        %21:bool = lt %15, %20
        if %21 [t: %b5, f: %b6] {  # if_1
          %b5 = block {  # true
            exit_if  # if_1
          }
          %b6 = block {  # false
            exit_loop  # loop_1
          }
        }
        %22:ptr<uniform, i32, read> = access %x_9, 0u, 2i, 0u
        %x_59:i32 = load %22
        %24:ptr<uniform, f32, read> = access %x_6, 0u, 0i, 0u
        %x_61:f32 = load %24
        %x_65:i32 = load %i
        %27:ptr<uniform, i32, read> = access %x_9, 0u, 1i, 0u
        %x_67:i32 = load %27
        %29:vec4<f32> = construct %x_61, 0.0f, 0.0f, 0.0f
        %30:vec4<f32> = construct 0.0f, %x_61, 0.0f, 0.0f
        %31:mat2x4<f32> = construct %29, %30
        store %indexable, %31
        %32:ptr<function, f32, read_write> = access %sums, %x_59
        %33:ptr<function, f32, read_write> = access %sums, %x_59
        %34:f32 = load %33
        %35:ptr<function, vec4<f32>, read_write> = access %indexable, %x_65
        %36:f32 = load_vector_element %35, %x_67
        %37:f32 = add %34, %36
        store %32, %37
        continue %b4
      }
      %b4 = block {  # continuing
        %38:i32 = load %i
        %39:i32 = add %38, 1i
        store %i, %39
        next_iteration %b3
      }
    }
    %40:ptr<uniform, i32, read> = access %x_9, 0u, 2i, 0u
    %41:i32 = load %40
    %42:ptr<function, f32, read_write> = access %sums, %41
    %43:f32 = load %42
    %44:ptr<uniform, f32, read> = access %x_6, 0u, 1i, 0u
    %45:f32 = load %44
    %46:bool = eq %43, %45
    if %46 [t: %b7, f: %b8] {  # if_2
      %b7 = block {  # true
        %47:ptr<uniform, i32, read> = access %x_9, 0u, 0i, 0u
        %48:i32 = load %47
        %49:f32 = convert %48
        %50:ptr<uniform, i32, read> = access %x_9, 0u, 1i, 0u
        %51:i32 = load %50
        %52:f32 = convert %51
        %53:ptr<uniform, i32, read> = access %x_9, 0u, 1i, 0u
        %54:i32 = load %53
        %55:f32 = convert %54
        %56:ptr<uniform, i32, read> = access %x_9, 0u, 0i, 0u
        %57:i32 = load %56
        %58:f32 = convert %57
        %59:vec4<f32> = construct %49, %52, %55, %58
        store %x_GLF_color, %59
        exit_if  # if_2
      }
      %b8 = block {  # false
        %60:ptr<uniform, i32, read> = access %x_9, 0u, 1i, 0u
        %61:i32 = load %60
        %62:f32 = convert %61
        %63:vec4<f32> = construct %62
        store %x_GLF_color, %63
        exit_if  # if_2
      }
    }
    ret
  }
}
%tint_symbol = @fragment func():main_out -> %b9 {
  %b9 = block {
    %65:void = call %main_1
    %66:vec4<f32> = load %x_GLF_color
    %67:main_out = construct %66
    ret %67
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
