SKIP: FAILED

<dawn>/src/tint/lang/msl/writer/printer/printer.cc:355 internal compiler error: strided_arr = struct @align(4) {
  el:f32 @offset(0)
}

buf1 = struct @align(4) {
  x_GLF_uniform_float_values:array<strided_arr, 4> @offset(0)
}

strided_arr_1 = struct @align(4) {
  el:i32 @offset(0)
}

buf0 = struct @align(4) {
  x_GLF_uniform_int_values:array<strided_arr_1, 2> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

%b1 = block {  # root
  %x_6:ptr<uniform, buf1, read> = var @binding_point(0, 1)
  %x_9:ptr<uniform, buf0, read> = var @binding_point(0, 0)
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
}

%main_1 = func():void -> %b2 {
  %b2 = block {
    %v1:ptr<function, vec2<f32>, read_write> = var
    %v2:ptr<function, vec2<i32>, read_write> = var
    %v3:ptr<function, vec2<f32>, read_write> = var
    %x_66:ptr<function, bool, read_write> = var
    %x_67_phi:ptr<function, bool, read_write> = var
    %10:ptr<uniform, f32, read> = access %x_6, 0u, 2i, 0u
    %x_41:f32 = load %10
    %12:ptr<uniform, f32, read> = access %x_6, 0u, 3i, 0u
    %x_43:f32 = load %12
    %14:vec2<f32> = construct %x_41, %x_43
    %15:vec2<f32> = sinh %14
    store %v1, %15
    %16:ptr<uniform, i32, read> = access %x_9, 0u, 0i, 0u
    %x_47:i32 = load %16
    %18:vec2<i32> = construct %x_47, -3000i
    store %v2, %18
    %x_49:vec2<f32> = load %v1
    %x_50:vec2<i32> = load %v2
    %21:vec2<f32> = ldexp %x_49, %x_50
    store %v3, %21
    %x_53:f32 = load_vector_element %v3, 1u
    %23:vec4<f32> = construct %x_53, %x_53, %x_53, %x_53
    store %x_GLF_color, %23
    %x_56:f32 = load_vector_element %v3, 0u
    %25:ptr<uniform, f32, read> = access %x_6, 0u, 0i, 0u
    %x_58:f32 = load %25
    %x_59:bool = gt %x_56, %x_58
    store %x_67_phi, %x_59
    if %x_59 [t: %b3] {  # if_1
      %b3 = block {  # true
        %x_63:f32 = load_vector_element %v3, 0u
        %29:ptr<uniform, f32, read> = access %x_6, 0u, 1i, 0u
        %x_65:f32 = load %29
        %31:bool = lt %x_63, %x_65
        store %x_66, %31
        %32:bool = load %x_66
        store %x_67_phi, %32
        exit_if  # if_1
      }
    }
    %x_67:bool = load %x_67_phi
    if %x_67 [t: %b4, f: %b5] {  # if_2
      %b4 = block {  # true
        %34:ptr<uniform, i32, read> = access %x_9, 0u, 0i, 0u
        %x_72:i32 = load %34
        %36:ptr<uniform, i32, read> = access %x_9, 0u, 1i, 0u
        %x_75:i32 = load %36
        %38:ptr<uniform, i32, read> = access %x_9, 0u, 1i, 0u
        %x_78:i32 = load %38
        %40:ptr<uniform, i32, read> = access %x_9, 0u, 0i, 0u
        %x_81:i32 = load %40
        %42:f32 = convert %x_72
        %43:f32 = convert %x_75
        %44:f32 = convert %x_78
        %45:f32 = convert %x_81
        %46:vec4<f32> = construct %42, %43, %44, %45
        store %x_GLF_color, %46
        exit_if  # if_2
      }
      %b5 = block {  # false
        %47:ptr<uniform, i32, read> = access %x_9, 0u, 1i, 0u
        %x_85:i32 = load %47
        %x_86:f32 = convert %x_85
        %50:vec4<f32> = construct %x_86, %x_86, %x_86, %x_86
        store %x_GLF_color, %50
        exit_if  # if_2
      }
    }
    ret
  }
}
%tint_symbol = @fragment func():main_out -> %b6 {
  %b6 = block {
    %52:void = call %main_1
    %53:vec4<f32> = load %x_GLF_color
    %54:main_out = construct %53
    ret %54
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
