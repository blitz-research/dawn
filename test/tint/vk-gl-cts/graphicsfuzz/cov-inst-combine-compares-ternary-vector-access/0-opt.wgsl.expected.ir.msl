SKIP: FAILED

<dawn>/src/tint/lang/msl/writer/printer/printer.cc:355 internal compiler error: strided_arr = struct @align(4) {
  el:f32 @offset(0)
}

buf0 = struct @align(4) {
  x_GLF_uniform_float_values:array<strided_arr, 4> @offset(0)
}

strided_arr_1 = struct @align(4) {
  el:i32 @offset(0)
}

buf1 = struct @align(4) {
  x_GLF_uniform_int_values:array<strided_arr_1, 2> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

%b1 = block {  # root
  %gl_FragCoord:ptr<private, vec4<f32>, read_write> = var
  %x_7:ptr<uniform, buf0, read> = var @binding_point(0, 0)
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
  %x_10:ptr<uniform, buf1, read> = var @binding_point(0, 1)
}

%main_1 = func():void -> %b2 {
  %b2 = block {
    %a:ptr<function, i32, read_write> = var
    %b:ptr<function, f32, read_write> = var
    %x_39:f32 = load_vector_element %gl_FragCoord, 1u
    %9:ptr<uniform, f32, read> = access %x_7, 0u, 0i, 0u
    %x_41:f32 = load %9
    %11:bool = gte %x_39, %x_41
    %12:i32 = select 2i, 0i, %11
    store %a, %12
    %13:ptr<uniform, f32, read> = access %x_7, 0u, 1i, 0u
    %x_45:f32 = load %13
    %15:ptr<uniform, f32, read> = access %x_7, 0u, 2i, 0u
    %x_47:f32 = load %15
    %17:ptr<uniform, f32, read> = access %x_7, 0u, 3i, 0u
    %x_49:f32 = load %17
    %x_51:i32 = load %a
    %20:vec3<f32> = construct %x_45, %x_47, %x_49
    %21:f32 = access %20, %x_51
    store %b, %21
    %x_53:f32 = load %b
    %23:ptr<uniform, f32, read> = access %x_7, 0u, 1i, 0u
    %x_55:f32 = load %23
    %25:bool = eq %x_53, %x_55
    if %25 [t: %b3, f: %b4] {  # if_1
      %b3 = block {  # true
        %26:ptr<uniform, i32, read> = access %x_10, 0u, 0i, 0u
        %x_61:i32 = load %26
        %28:ptr<uniform, i32, read> = access %x_10, 0u, 1i, 0u
        %x_64:i32 = load %28
        %30:ptr<uniform, i32, read> = access %x_10, 0u, 1i, 0u
        %x_67:i32 = load %30
        %32:ptr<uniform, i32, read> = access %x_10, 0u, 0i, 0u
        %x_70:i32 = load %32
        %34:f32 = convert %x_61
        %35:f32 = convert %x_64
        %36:f32 = convert %x_67
        %37:f32 = convert %x_70
        %38:vec4<f32> = construct %34, %35, %36, %37
        store %x_GLF_color, %38
        exit_if  # if_1
      }
      %b4 = block {  # false
        %39:ptr<uniform, i32, read> = access %x_10, 0u, 0i, 0u
        %x_74:i32 = load %39
        %x_75:f32 = convert %x_74
        %42:vec4<f32> = construct %x_75, %x_75, %x_75, %x_75
        store %x_GLF_color, %42
        exit_if  # if_1
      }
    }
    ret
  }
}
%tint_symbol = @fragment func(%gl_FragCoord_param:vec4<f32> [@position]):main_out -> %b5 {
  %b5 = block {
    store %gl_FragCoord, %gl_FragCoord_param
    %45:void = call %main_1
    %46:vec4<f32> = load %x_GLF_color
    %47:main_out = construct %46
    ret %47
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
