SKIP: FAILED

<dawn>/src/tint/lang/msl/writer/printer/printer.cc:355 internal compiler error: buf0 = struct @align(8) {
  resolution:vec2<f32> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

%b1 = block {  # root
  %gl_FragCoord:ptr<private, vec4<f32>, read_write> = var
  %x_6:ptr<uniform, buf0, read> = var @binding_point(0, 0)
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
}

%main_1 = func():void -> %b2 {
  %b2 = block {
    %indexable:ptr<function, array<vec4<f32>, 16>, read_write> = var
    %x_65:ptr<function, i32, read_write> = var
    %x_68:ptr<function, i32, read_write> = var
    %8:vec4<f32> = load %gl_FragCoord
    %9:vec2<f32> = swizzle %8, xy
    %10:ptr<uniform, vec2<f32>, read> = access %x_6, 0u
    %11:vec2<f32> = load %10
    %12:vec2<f32> = div %9, %11
    %13:vec2<f32> = mul %12, 8.0f
    %x_57:vec2<f32> = floor %13
    %15:f32 = access %x_57, 0u
    %16:i32 = convert %15
    %17:i32 = mul %16, 8i
    %18:f32 = access %x_57, 1u
    %19:i32 = convert %18
    %x_63:i32 = add %17, %19
    store %x_65, 0i
    store %x_68, %x_63
    loop [b: %b3, c: %b4] {  # loop_1
      %b3 = block {  # body
        %x_79:ptr<function, i32, read_write> = var
        %x_80:ptr<function, i32, read_write> = var
        %x_69:ptr<function, i32, read_write> = var
        %24:i32 = load %x_68
        %25:bool = gt %24, 1i
        if %25 [t: %b5, f: %b6] {  # if_1
          %b5 = block {  # true
            exit_if  # if_1
          }
          %b6 = block {  # false
            exit_loop  # loop_1
          }
        }
        %26:i32 = load %x_68
        %27:i32 = and %26, 1i
        %28:bool = eq %27, 1i
        if %28 [t: %b7, f: %b8] {  # if_2
          %b7 = block {  # true
            %29:i32 = load %x_68
            %30:i32 = mul 3i, %29
            %31:i32 = add %30, 1i
            store %x_79, %31
            %32:i32 = load %x_79
            store %x_69, %32
            exit_if  # if_2
          }
          %b8 = block {  # false
            %33:i32 = load %x_68
            %34:i32 = div %33, 2i
            store %x_80, %34
            %35:i32 = load %x_80
            store %x_69, %35
            exit_if  # if_2
          }
        }
        continue %b4
      }
      %b4 = block {  # continuing
        %36:i32 = load %x_65
        %37:i32 = add %36, 1i
        store %x_65, %37
        %38:i32 = load %x_69
        store %x_68, %38
        next_iteration %b3
      }
    }
    store %indexable, array<vec4<f32>, 16>(vec4<f32>(0.0f, 0.0f, 0.0f, 1.0f), vec4<f32>(0.5f, 0.0f, 0.0f, 1.0f), vec4<f32>(0.0f, 0.5f, 0.0f, 1.0f), vec4<f32>(0.5f, 0.5f, 0.0f, 1.0f), vec4<f32>(0.0f, 0.0f, 0.5f, 1.0f), vec4<f32>(0.5f, 0.0f, 0.5f, 1.0f), vec4<f32>(0.0f, 0.5f, 0.5f, 1.0f), vec4<f32>(0.5f, 0.5f, 0.5f, 1.0f), vec4<f32>(0.0f, 0.0f, 0.0f, 1.0f), vec4<f32>(1.0f, 0.0f, 0.0f, 1.0f), vec4<f32>(0.0f, 1.0f, 0.0f, 1.0f), vec4<f32>(1.0f, 1.0f, 0.0f, 1.0f), vec4<f32>(0.0f, 0.0f, 1.0f, 1.0f), vec4<f32>(1.0f, 0.0f, 1.0f, 1.0f), vec4<f32>(0.0f, 1.0f, 1.0f, 1.0f), vec4<f32>(1.0f))
    %39:i32 = load %x_65
    %40:i32 = mod %39, 16i
    %41:ptr<function, vec4<f32>, read_write> = access %indexable, %40
    %42:vec4<f32> = load %41
    store %x_GLF_color, %42
    ret
  }
}
%tint_symbol = @fragment func(%gl_FragCoord_param:vec4<f32> [@position]):main_out -> %b9 {
  %b9 = block {
    store %gl_FragCoord, %gl_FragCoord_param
    %45:void = call %main_1
    %46:vec4<f32> = load %x_GLF_color
    %47:main_out = construct %46
    ret %47
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
