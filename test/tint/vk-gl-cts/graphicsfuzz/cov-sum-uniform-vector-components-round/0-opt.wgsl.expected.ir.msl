SKIP: FAILED

<dawn>/src/tint/lang/msl/writer/printer/printer.cc:355 internal compiler error: strided_arr = struct @align(4) {
  el:f32 @offset(0)
}

buf1 = struct @align(4) {
  x_GLF_uniform_float_values:array<strided_arr, 3> @offset(0)
}

buf2 = struct @align(8) {
  resolution:vec2<f32> @offset(0)
}

strided_arr_1 = struct @align(4) {
  el:i32 @offset(0)
}

buf0 = struct @align(4) {
  x_GLF_uniform_int_values:array<strided_arr_1, 2> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

%b1 = block {  # root
  %x_6:ptr<uniform, buf1, read> = var @binding_point(0, 1)
  %x_8:ptr<uniform, buf2, read> = var @binding_point(0, 2)
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
  %x_10:ptr<uniform, buf0, read> = var @binding_point(0, 0)
}

%main_1 = func():void -> %b2 {
  %b2 = block {
    %f:ptr<function, f32, read_write> = var
    %7:ptr<uniform, f32, read> = access %x_6, 0u, 1i, 0u
    %x_37:f32 = load %7
    %9:ptr<uniform, vec2<f32>, read> = access %x_8, 0u
    %x_39:f32 = load_vector_element %9, 0u
    %11:ptr<uniform, f32, read> = access %x_6, 0u, 2i, 0u
    %x_42:f32 = load %11
    %13:ptr<uniform, vec2<f32>, read> = access %x_8, 0u
    %x_44:f32 = load_vector_element %13, 0u
    %15:ptr<uniform, vec2<f32>, read> = access %x_8, 0u
    %x_49:f32 = load_vector_element %15, 1u
    %17:f32 = mul %x_37, %x_39
    %18:f32 = round %x_44
    %19:f32 = mul %x_42, %18
    %20:f32 = add %17, %19
    %21:f32 = add %20, %x_49
    store %f, %21
    %x_51:f32 = load %f
    %23:ptr<uniform, f32, read> = access %x_6, 0u, 0i, 0u
    %x_53:f32 = load %23
    %25:bool = eq %x_51, %x_53
    if %25 [t: %b3, f: %b4] {  # if_1
      %b3 = block {  # true
        %26:ptr<uniform, i32, read> = access %x_10, 0u, 0i, 0u
        %x_59:i32 = load %26
        %28:ptr<uniform, i32, read> = access %x_10, 0u, 1i, 0u
        %x_62:i32 = load %28
        %30:ptr<uniform, i32, read> = access %x_10, 0u, 1i, 0u
        %x_65:i32 = load %30
        %32:ptr<uniform, i32, read> = access %x_10, 0u, 0i, 0u
        %x_68:i32 = load %32
        %34:f32 = convert %x_59
        %35:f32 = convert %x_62
        %36:f32 = convert %x_65
        %37:f32 = convert %x_68
        %38:vec4<f32> = construct %34, %35, %36, %37
        store %x_GLF_color, %38
        exit_if  # if_1
      }
      %b4 = block {  # false
        %39:ptr<uniform, i32, read> = access %x_10, 0u, 1i, 0u
        %x_72:i32 = load %39
        %x_73:f32 = convert %x_72
        %42:vec4<f32> = construct %x_73, %x_73, %x_73, %x_73
        store %x_GLF_color, %42
        exit_if  # if_1
      }
    }
    ret
  }
}
%tint_symbol = @fragment func():main_out -> %b5 {
  %b5 = block {
    %44:void = call %main_1
    %45:vec4<f32> = load %x_GLF_color
    %46:main_out = construct %45
    ret %46
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
