SKIP: FAILED

<dawn>/src/tint/lang/msl/writer/printer/printer.cc:355 internal compiler error: strided_arr = struct @align(4) {
  el:i32 @offset(0)
}

buf0 = struct @align(4) {
  x_GLF_uniform_int_values:array<strided_arr, 5> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

%b1 = block {  # root
  %x_6:ptr<uniform, buf0, read> = var @binding_point(0, 0)
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
}

%main_1 = func():void -> %b2 {
  %b2 = block {
    %a:ptr<function, i32, read_write> = var
    %i:ptr<function, i32, read_write> = var
    %indexable:ptr<function, array<i32, 9>, read_write> = var
    %7:ptr<uniform, i32, read> = access %x_6, 0u, 2i, 0u
    %x_38:i32 = load %7
    store %a, %x_38
    %9:ptr<uniform, i32, read> = access %x_6, 0u, 3i, 0u
    %x_40:i32 = load %9
    store %i, %x_40
    loop [b: %b3, c: %b4] {  # loop_1
      %b3 = block {  # body
        %x_45:i32 = load %i
        %12:ptr<uniform, i32, read> = access %x_6, 0u, 0i, 0u
        %x_47:i32 = load %12
        %14:bool = lt %x_45, %x_47
        if %14 [t: %b5, f: %b6] {  # if_1
          %b5 = block {  # true
            exit_if  # if_1
          }
          %b6 = block {  # false
            exit_loop  # loop_1
          }
        }
        %x_50:i32 = load %i
        %16:ptr<uniform, i32, read> = access %x_6, 0u, 4i, 0u
        %x_52:i32 = load %16
        store %indexable, array<i32, 9>(1i, 2i, 3i, 4i, 5i, 6i, 7i, 8i, 9i)
        %18:i32 = mod %x_50, %x_52
        %19:ptr<function, i32, read_write> = access %indexable, %18
        %x_55:i32 = load %19
        %x_56:i32 = load %a
        %22:i32 = add %x_56, %x_55
        store %a, %22
        continue %b4
      }
      %b4 = block {  # continuing
        %x_58:i32 = load %i
        %24:i32 = add %x_58, 1i
        store %i, %24
        next_iteration %b3
      }
    }
    %x_60:i32 = load %a
    %26:ptr<uniform, i32, read> = access %x_6, 0u, 1i, 0u
    %x_62:i32 = load %26
    %28:bool = eq %x_60, %x_62
    if %28 [t: %b7, f: %b8] {  # if_2
      %b7 = block {  # true
        %29:ptr<uniform, i32, read> = access %x_6, 0u, 2i, 0u
        %x_68:i32 = load %29
        %31:ptr<uniform, i32, read> = access %x_6, 0u, 3i, 0u
        %x_71:i32 = load %31
        %33:ptr<uniform, i32, read> = access %x_6, 0u, 3i, 0u
        %x_74:i32 = load %33
        %35:ptr<uniform, i32, read> = access %x_6, 0u, 2i, 0u
        %x_77:i32 = load %35
        %37:f32 = convert %x_68
        %38:f32 = convert %x_71
        %39:f32 = convert %x_74
        %40:f32 = convert %x_77
        %41:vec4<f32> = construct %37, %38, %39, %40
        store %x_GLF_color, %41
        exit_if  # if_2
      }
      %b8 = block {  # false
        %42:ptr<uniform, i32, read> = access %x_6, 0u, 3i, 0u
        %x_81:i32 = load %42
        %x_82:f32 = convert %x_81
        %45:vec4<f32> = construct %x_82, %x_82, %x_82, %x_82
        store %x_GLF_color, %45
        exit_if  # if_2
      }
    }
    ret
  }
}
%tint_symbol = @fragment func():main_out -> %b9 {
  %b9 = block {
    %47:void = call %main_1
    %48:vec4<f32> = load %x_GLF_color
    %49:main_out = construct %48
    ret %49
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
