SKIP: FAILED

<dawn>/src/tint/lang/msl/writer/printer/printer.cc:355 internal compiler error: strided_arr = struct @align(4) {
  el:f32 @offset(0)
}

buf0 = struct @align(4) {
  x_GLF_uniform_float_values:array<strided_arr, 5> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

%b1 = block {  # root
  %gl_FragCoord:ptr<private, vec4<f32>, read_write> = var
  %x_6:ptr<uniform, buf0, read> = var @binding_point(0, 0)
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
}

%main_1 = func():void -> %b2 {
  %b2 = block {
    %x_33:f32 = load_vector_element %gl_FragCoord, 0u
    %6:ptr<uniform, f32, read> = access %x_6, 0u, 0i, 0u
    %x_35:f32 = load %6
    %8:bool = gt %x_33, %x_35
    if %8 [t: %b3] {  # if_1
      %b3 = block {  # true
        %9:ptr<uniform, f32, read> = access %x_6, 0u, 2i, 0u
        %x_40:f32 = load %9
        %11:vec4<f32> = construct %x_40, %x_40, %x_40, %x_40
        store %x_GLF_color, %11
        %x_43:f32 = load_vector_element %gl_FragCoord, 1u
        %13:bool = gt %x_43, %x_35
        if %13 [t: %b4] {  # if_2
          %b4 = block {  # true
            %14:ptr<uniform, f32, read> = access %x_6, 0u, 4i, 0u
            %x_48:f32 = load %14
            %16:vec4<f32> = construct %x_48, %x_48, %x_48, %x_48
            store %x_GLF_color, %16
            exit_if  # if_2
          }
        }
        %17:ptr<uniform, f32, read> = access %x_6, 0u, 3i, 0u
        %x_51:f32 = load %17
        %19:vec4<f32> = construct %x_51, %x_51, %x_51, %x_51
        store %x_GLF_color, %19
        exit_if  # if_1
      }
    }
    %20:ptr<uniform, f32, read> = access %x_6, 0u, 1i, 0u
    %x_54:f32 = load %20
    %22:vec4<f32> = construct %x_35, %x_54, %x_54, 10.0f
    store %x_GLF_color, %22
    %x_61:vec4<f32> = load %x_GLF_color
    %24:vec4<f32> = construct %x_35, 0.0f, 0.0f, 0.0f
    %25:vec4<f32> = construct 0.0f, %x_35, 0.0f, 0.0f
    %26:vec4<f32> = construct 0.0f, 0.0f, %x_35, 0.0f
    %27:vec4<f32> = construct 0.0f, 0.0f, 0.0f, %x_35
    %28:mat4x4<f32> = construct %24, %25, %26, %27
    %29:vec4<f32> = mul %28, %x_61
    store %x_GLF_color, %29
    ret
  }
}
%tint_symbol = @fragment func(%gl_FragCoord_param:vec4<f32> [@position]):main_out -> %b5 {
  %b5 = block {
    store %gl_FragCoord, %gl_FragCoord_param
    %32:void = call %main_1
    %33:vec4<f32> = load %x_GLF_color
    %34:main_out = construct %33
    ret %34
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
