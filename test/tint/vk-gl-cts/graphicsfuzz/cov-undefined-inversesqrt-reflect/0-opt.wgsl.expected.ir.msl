SKIP: FAILED

<dawn>/src/tint/lang/msl/writer/printer/printer.cc:355 internal compiler error: strided_arr = struct @align(4) {
  el:f32 @offset(0)
}

buf0 = struct @align(4) {
  x_GLF_uniform_float_values:array<strided_arr, 1> @offset(0)
}

buf1 = struct @align(8) {
  v1:vec2<f32> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

%b1 = block {  # root
  %x_6:ptr<uniform, buf0, read> = var @binding_point(0, 0)
  %x_8:ptr<uniform, buf1, read> = var @binding_point(0, 1)
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
}

%main_1 = func():void -> %b2 {
  %b2 = block {
    %m24:ptr<function, mat2x2<f32>, read_write> = var
    %a:ptr<function, f32, read_write> = var
    %v2:ptr<function, vec2<f32>, read_write> = var
    %v3:ptr<function, vec2<f32>, read_write> = var
    %9:ptr<uniform, f32, read> = access %x_6, 0u, 0i, 0u
    %x_40:f32 = load %9
    %11:ptr<uniform, f32, read> = access %x_6, 0u, 0i, 0u
    %x_42:f32 = load %11
    %13:ptr<uniform, vec2<f32>, read> = access %x_8, 0u
    %x_44:f32 = load_vector_element %13, 0u
    %15:ptr<uniform, f32, read> = access %x_6, 0u, 0i, 0u
    %x_47:f32 = load %15
    %17:vec2<f32> = construct %x_40, %x_42
    %18:f32 = mul %x_44, 1.0f
    %19:vec2<f32> = construct %18, %x_47
    %20:mat2x2<f32> = construct %17, %19
    store %m24, %20
    %x_51:mat2x2<f32> = load %m24
    %22:f32 = access %x_51, 0u, 0u
    store %a, %22
    store %v2, vec2<f32>(1.0f)
    %x_53:vec2<f32> = load %v2
    %x_54:f32 = load %a
    %x_55:vec2<f32> = construct %x_54, 1.0f
    %26:vec2<f32> = reflect %x_53, %x_55
    store %v3, %26
    %27:ptr<uniform, f32, read> = access %x_6, 0u, 0i, 0u
    %x_58:f32 = load %27
    %x_59:vec2<f32> = load %v3
    %30:ptr<uniform, f32, read> = access %x_6, 0u, 0i, 0u
    %x_61:f32 = load %30
    %32:f32 = access %x_59, 0u
    %33:f32 = access %x_59, 1u
    %34:vec4<f32> = construct %x_58, %32, %33, %x_61
    store %x_GLF_color, %34
    %35:ptr<uniform, vec2<f32>, read> = access %x_8, 0u
    %x_66:f32 = load_vector_element %35, 1u
    %37:ptr<uniform, f32, read> = access %x_6, 0u, 0i, 0u
    %x_68:f32 = load %37
    %39:bool = eq %x_66, %x_68
    if %39 [t: %b3, f: %b4] {  # if_1
      %b3 = block {  # true
        %x_73:vec4<f32> = load %x_GLF_color
        %41:f32 = access %x_73, 0u
        %42:f32 = access %x_73, 3u
        %43:vec4<f32> = construct %41, 0.0f, 0.0f, %42
        store %x_GLF_color, %43
        exit_if  # if_1
      }
      %b4 = block {  # false
        store %x_GLF_color, vec4<f32>(0.0f)
        exit_if  # if_1
      }
    }
    ret
  }
}
%tint_symbol = @fragment func():main_out -> %b5 {
  %b5 = block {
    %45:void = call %main_1
    %46:vec4<f32> = load %x_GLF_color
    %47:main_out = construct %46
    ret %47
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
