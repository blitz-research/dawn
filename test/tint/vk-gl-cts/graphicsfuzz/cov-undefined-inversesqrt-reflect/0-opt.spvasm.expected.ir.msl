SKIP: FAILED

<dawn>/src/tint/lang/msl/writer/printer/printer.cc:355 internal compiler error: strided_arr = struct @align(4) {
  el:f32 @offset(0)
}

buf0 = struct @align(4) {
  x_GLF_uniform_float_values:array<strided_arr, 1> @offset(0)
}

buf1 = struct @align(8) {
  v1:vec2<f32> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

%b1 = block {  # root
  %x_6:ptr<uniform, buf0, read> = var @binding_point(0, 0)
  %x_8:ptr<uniform, buf1, read> = var @binding_point(0, 1)
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
}

%main_1 = func():void -> %b2 {
  %b2 = block {
    %m24:ptr<function, mat2x2<f32>, read_write> = var
    %a:ptr<function, f32, read_write> = var
    %v2:ptr<function, vec2<f32>, read_write> = var
    %v3:ptr<function, vec2<f32>, read_write> = var
    %9:ptr<uniform, f32, read> = access %x_6, 0u, 0i, 0u
    %10:f32 = load %9
    %11:ptr<uniform, f32, read> = access %x_6, 0u, 0i, 0u
    %12:f32 = load %11
    %13:vec2<f32> = construct %10, %12
    %14:ptr<uniform, vec2<f32>, read> = access %x_8, 0u
    %15:f32 = load_vector_element %14, 0u
    %16:f32 = mul %15, 1.0f
    %17:ptr<uniform, f32, read> = access %x_6, 0u, 0i, 0u
    %18:f32 = load %17
    %19:vec2<f32> = construct %16, %18
    %20:mat2x2<f32> = construct %13, %19
    store %m24, %20
    %21:ptr<function, vec2<f32>, read_write> = access %m24, 0u
    %22:f32 = load_vector_element %21, 0u
    store %a, %22
    store %v2, vec2<f32>(1.0f)
    %23:vec2<f32> = load %v2
    %24:f32 = load %a
    %25:vec2<f32> = construct %24, 1.0f
    %26:vec2<f32> = reflect %23, %25
    store %v3, %26
    %27:ptr<uniform, f32, read> = access %x_6, 0u, 0i, 0u
    %28:f32 = load %27
    %29:f32 = load_vector_element %v3, 0u
    %30:f32 = load_vector_element %v3, 1u
    %31:ptr<uniform, f32, read> = access %x_6, 0u, 0i, 0u
    %32:f32 = load %31
    %33:vec4<f32> = construct %28, %29, %30, %32
    store %x_GLF_color, %33
    %34:ptr<uniform, vec2<f32>, read> = access %x_8, 0u
    %35:f32 = load_vector_element %34, 1u
    %36:ptr<uniform, f32, read> = access %x_6, 0u, 0i, 0u
    %37:f32 = load %36
    %38:bool = eq %35, %37
    if %38 [t: %b3, f: %b4] {  # if_1
      %b3 = block {  # true
        %39:f32 = load_vector_element %x_GLF_color, 0u
        %40:f32 = load_vector_element %x_GLF_color, 3u
        %41:vec4<f32> = construct %39, vec2<f32>(0.0f), %40
        store %x_GLF_color, %41
        exit_if  # if_1
      }
      %b4 = block {  # false
        store %x_GLF_color, vec4<f32>(0.0f)
        exit_if  # if_1
      }
    }
    ret
  }
}
%tint_symbol = @fragment func():main_out -> %b5 {
  %b5 = block {
    %43:void = call %main_1
    %44:vec4<f32> = load %x_GLF_color
    %45:main_out = construct %44
    ret %45
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
