SKIP: FAILED

<dawn>/src/tint/lang/msl/writer/printer/printer.cc:355 internal compiler error: strided_arr = struct @align(4) {
  el:i32 @offset(0)
}

buf0 = struct @align(4) {
  x_GLF_uniform_int_values:array<strided_arr, 4> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

%b1 = block {  # root
  %x_6:ptr<uniform, buf0, read> = var @binding_point(0, 0)
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
}

%main_1 = func():void -> %b2 {
  %b2 = block {
    %v:ptr<function, vec4<f32>, read_write> = var
    %i:ptr<function, i32, read_write> = var
    %6:ptr<uniform, i32, read> = access %x_6, 0u, 3i, 0u
    %x_36:i32 = load %6
    %x_37:f32 = convert %x_36
    %9:vec4<f32> = construct %x_37, %x_37, %x_37, %x_37
    store %v, %9
    %10:ptr<uniform, i32, read> = access %x_6, 0u, 0i, 0u
    %x_40:i32 = load %10
    store %i, %x_40
    loop [b: %b3, c: %b4] {  # loop_1
      %b3 = block {  # body
        %x_45:i32 = load %i
        %13:ptr<uniform, i32, read> = access %x_6, 0u, 3i, 0u
        %x_47:i32 = load %13
        %15:bool = lt %x_45, %x_47
        if %15 [t: %b5, f: %b6] {  # if_1
          %b5 = block {  # true
            exit_if  # if_1
          }
          %b6 = block {  # false
            exit_loop  # loop_1
          }
        }
        %x_50:i32 = load %i
        %x_51:i32 = load %i
        %18:u32 = access vec3<u32>(0u, 1u, 2u), %x_50
        %19:f32 = convert %x_51
        store_vector_element %v, %18, %19
        continue %b4
      }
      %b4 = block {  # continuing
        %x_55:i32 = load %i
        %21:i32 = add %x_55, 1i
        store %i, %21
        next_iteration %b3
      }
    }
    %x_57:vec4<f32> = load %v
    %23:ptr<uniform, i32, read> = access %x_6, 0u, 0i, 0u
    %x_59:i32 = load %23
    %25:ptr<uniform, i32, read> = access %x_6, 0u, 1i, 0u
    %x_62:i32 = load %25
    %27:ptr<uniform, i32, read> = access %x_6, 0u, 2i, 0u
    %x_65:i32 = load %27
    %29:ptr<uniform, i32, read> = access %x_6, 0u, 3i, 0u
    %x_68:i32 = load %29
    %31:f32 = convert %x_59
    %32:f32 = convert %x_62
    %33:f32 = convert %x_65
    %34:f32 = convert %x_68
    %35:vec4<f32> = construct %31, %32, %33, %34
    %36:vec4<bool> = eq %x_57, %35
    %37:bool = all %36
    if %37 [t: %b7, f: %b8] {  # if_2
      %b7 = block {  # true
        %38:ptr<uniform, i32, read> = access %x_6, 0u, 1i, 0u
        %x_77:i32 = load %38
        %40:ptr<uniform, i32, read> = access %x_6, 0u, 0i, 0u
        %x_80:i32 = load %40
        %42:ptr<uniform, i32, read> = access %x_6, 0u, 0i, 0u
        %x_83:i32 = load %42
        %44:ptr<uniform, i32, read> = access %x_6, 0u, 1i, 0u
        %x_86:i32 = load %44
        %46:f32 = convert %x_77
        %47:f32 = convert %x_80
        %48:f32 = convert %x_83
        %49:f32 = convert %x_86
        %50:vec4<f32> = construct %46, %47, %48, %49
        store %x_GLF_color, %50
        exit_if  # if_2
      }
      %b8 = block {  # false
        %51:ptr<uniform, i32, read> = access %x_6, 0u, 0i, 0u
        %x_90:i32 = load %51
        %x_91:f32 = convert %x_90
        %54:vec4<f32> = construct %x_91, %x_91, %x_91, %x_91
        store %x_GLF_color, %54
        exit_if  # if_2
      }
    }
    ret
  }
}
%tint_symbol = @fragment func():main_out -> %b9 {
  %b9 = block {
    %56:void = call %main_1
    %57:vec4<f32> = load %x_GLF_color
    %58:main_out = construct %57
    ret %58
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
