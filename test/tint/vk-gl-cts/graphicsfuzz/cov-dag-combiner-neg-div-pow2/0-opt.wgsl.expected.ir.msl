SKIP: FAILED

<dawn>/src/tint/lang/msl/writer/printer/printer.cc:355 internal compiler error: buf1 = struct @align(4) {
  ten:i32 @offset(0)
}

buf0 = struct @align(4) {
  minusEight:i32 @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

%b1 = block {  # root
  %x_8:ptr<uniform, buf1, read> = var @binding_point(0, 1)
  %x_10:ptr<uniform, buf0, read> = var @binding_point(0, 0)
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
}

%main_1 = func():void -> %b2 {
  %b2 = block {
    %a:ptr<function, i32, read_write> = var
    %b:ptr<function, i32, read_write> = var
    %i:ptr<function, i32, read_write> = var
    store %a, 0i
    store %b, 0i
    store %i, 0i
    loop [b: %b3, c: %b4] {  # loop_1
      %b3 = block {  # body
        %x_36:i32 = load %i
        %9:ptr<uniform, i32, read> = access %x_8, 0u
        %x_38:i32 = load %9
        %11:bool = lt %x_36, %x_38
        if %11 [t: %b5, f: %b6] {  # if_1
          %b5 = block {  # true
            exit_if  # if_1
          }
          %b6 = block {  # false
            exit_loop  # loop_1
          }
        }
        %x_41:i32 = load %a
        %13:bool = gt %x_41, 5i
        if %13 [t: %b7] {  # if_2
          %b7 = block {  # true
            exit_loop  # loop_1
          }
        }
        %14:ptr<uniform, i32, read> = access %x_10, 0u
        %x_46:i32 = load %14
        %x_48:i32 = load %a
        %17:i32 = div %x_46, -4i
        %18:i32 = add %x_48, %17
        store %a, %18
        %x_50:i32 = load %b
        %20:i32 = add %x_50, 1i
        store %b, %20
        continue %b4
      }
      %b4 = block {  # continuing
        %x_52:i32 = load %i
        %22:i32 = add %x_52, 1i
        store %i, %22
        next_iteration %b3
      }
    }
    %x_54:i32 = load %b
    %24:bool = eq %x_54, 3i
    if %24 [t: %b8, f: %b9] {  # if_3
      %b8 = block {  # true
        store %x_GLF_color, vec4<f32>(1.0f, 0.0f, 0.0f, 1.0f)
        exit_if  # if_3
      }
      %b9 = block {  # false
        store %x_GLF_color, vec4<f32>(0.0f)
        exit_if  # if_3
      }
    }
    ret
  }
}
%tint_symbol = @fragment func():main_out -> %b10 {
  %b10 = block {
    %26:void = call %main_1
    %27:vec4<f32> = load %x_GLF_color
    %28:main_out = construct %27
    ret %28
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
