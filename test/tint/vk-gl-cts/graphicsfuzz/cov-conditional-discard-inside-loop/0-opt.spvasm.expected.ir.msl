SKIP: FAILED

<dawn>/src/tint/lang/msl/writer/printer/printer.cc:355 internal compiler error: strided_arr = struct @align(4) {
  el:i32 @offset(0)
}

buf0 = struct @align(4) {
  x_GLF_uniform_int_values:array<strided_arr, 3> @offset(0)
}

buf2 = struct @align(8) {
  injectionSwitch:vec2<f32> @offset(0)
}

strided_arr_1 = struct @align(4) {
  el:f32 @offset(0)
}

buf1 = struct @align(4) {
  x_GLF_uniform_float_values:array<strided_arr_1, 1> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

%b1 = block {  # root
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
  %x_6:ptr<uniform, buf0, read> = var @binding_point(0, 0)
  %x_9:ptr<uniform, buf2, read> = var @binding_point(0, 2)
  %x_11:ptr<uniform, buf1, read> = var @binding_point(0, 1)
}

%main_1 = func():void -> %b2 {
  %b2 = block {
    %a:ptr<function, i32, read_write> = var
    %i:ptr<function, i32, read_write> = var
    store %a, 1i
    %8:ptr<uniform, i32, read> = access %x_6, 0u, 0i, 0u
    %9:i32 = load %8
    %10:f32 = convert %9
    %11:ptr<uniform, i32, read> = access %x_6, 0u, 1i, 0u
    %12:i32 = load %11
    %13:f32 = convert %12
    %14:ptr<uniform, i32, read> = access %x_6, 0u, 1i, 0u
    %15:i32 = load %14
    %16:f32 = convert %15
    %17:ptr<uniform, i32, read> = access %x_6, 0u, 0i, 0u
    %18:i32 = load %17
    %19:f32 = convert %18
    %20:vec4<f32> = construct %10, %13, %16, %19
    store %x_GLF_color, %20
    %21:ptr<uniform, i32, read> = access %x_6, 0u, 1i, 0u
    %22:i32 = load %21
    store %i, %22
    loop [b: %b3, c: %b4] {  # loop_1
      %b3 = block {  # body
        %23:i32 = load %i
        %24:ptr<uniform, i32, read> = access %x_6, 0u, 2i, 0u
        %25:i32 = load %24
        %26:bool = lt %23, %25
        if %26 [t: %b5, f: %b6] {  # if_1
          %b5 = block {  # true
            exit_if  # if_1
          }
          %b6 = block {  # false
            exit_loop  # loop_1
          }
        }
        %x_61:i32 = load %a
        %28:i32 = load %a
        %29:i32 = add %28, 1i
        store %a, %29
        %30:bool = gt %x_61, 3i
        if %30 [t: %b7] {  # if_2
          %b7 = block {  # true
            exit_loop  # loop_1
          }
        }
        %31:ptr<uniform, vec2<f32>, read> = access %x_9, 0u
        %32:f32 = load_vector_element %31, 0u
        %33:ptr<uniform, f32, read> = access %x_11, 0u, 0i, 0u
        %34:f32 = load %33
        %35:bool = gt %32, %34
        if %35 [t: %b8] {  # if_3
          %b8 = block {  # true
            discard
            exit_if  # if_3
          }
        }
        continue %b4
      }
      %b4 = block {  # continuing
        %36:i32 = load %i
        %37:i32 = add %36, 1i
        store %i, %37
        next_iteration %b3
      }
    }
    ret
  }
}
%tint_symbol = @fragment func():main_out -> %b9 {
  %b9 = block {
    %39:void = call %main_1
    %40:vec4<f32> = load %x_GLF_color
    %41:main_out = construct %40
    ret %41
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
