SKIP: FAILED

<dawn>/src/tint/lang/msl/writer/printer/printer.cc:355 internal compiler error: strided_arr = struct @align(4) {
  el:f32 @offset(0)
}

buf1 = struct @align(4) {
  x_GLF_uniform_float_values:array<strided_arr, 3> @offset(0)
}

strided_arr_1 = struct @align(4) {
  el:i32 @offset(0)
}

buf0 = struct @align(4) {
  x_GLF_uniform_int_values:array<strided_arr_1, 2> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

%b1 = block {  # root
  %gl_FragCoord:ptr<private, vec4<f32>, read_write> = var
  %x_6:ptr<uniform, buf1, read> = var @binding_point(0, 1)
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
  %x_8:ptr<uniform, buf0, read> = var @binding_point(0, 0)
}

%main_1 = func():void -> %b2 {
  %b2 = block {
    %v:ptr<function, vec2<i32>, read_write> = var
    %x_39:f32 = load_vector_element %gl_FragCoord, 1u
    %8:ptr<uniform, f32, read> = access %x_6, 0u, 0i, 0u
    %x_41:f32 = load %8
    %10:bool = lt %x_39, %x_41
    if %10 [t: %b3, f: %b4] {  # if_1
      %b3 = block {  # true
        %11:ptr<uniform, i32, read> = access %x_8, 0u, 0i, 0u
        %x_47:i32 = load %11
        %x_48:f32 = convert %x_47
        %14:vec4<f32> = construct %x_48, %x_48, %x_48, %x_48
        store %x_GLF_color, %14
        exit_if  # if_1
      }
      %b4 = block {  # false
        %x_50:vec4<f32> = load %gl_FragCoord
        %16:ptr<uniform, f32, read> = access %x_6, 0u, 1i, 0u
        %x_53:f32 = load %16
        %18:ptr<uniform, f32, read> = access %x_6, 0u, 0i, 0u
        %x_55:f32 = load %18
        %20:ptr<uniform, f32, read> = access %x_6, 0u, 2i, 0u
        %x_59:f32 = load %20
        %22:f32 = access %x_50, 0u
        %23:f32 = access %x_50, 1u
        %24:vec2<f32> = construct %22, %23
        %25:vec2<f32> = construct %x_53, %x_55
        %26:vec2<f32> = sub %24, %25
        %27:vec2<f32> = mul %26, %x_59
        %28:vec2<i32> = convert %27
        store %v, %28
        %29:ptr<uniform, f32, read> = access %x_6, 0u, 1i, 0u
        %x_63:f32 = load %29
        %x_65:i32 = load_vector_element %v, 1u
        %32:ptr<uniform, i32, read> = access %x_8, 0u, 1i, 0u
        %x_67:i32 = load %32
        %34:ptr<uniform, i32, read> = access %x_8, 0u, 1i, 0u
        %x_70:i32 = load %34
        %x_74:i32 = load_vector_element %v, 0u
        %37:ptr<uniform, i32, read> = access %x_8, 0u, 1i, 0u
        %x_76:i32 = load %37
        %39:ptr<uniform, f32, read> = access %x_6, 0u, 1i, 0u
        %x_80:f32 = load %39
        %41:i32 = sub %x_65, %x_67
        %42:i32 = and %41, %x_70
        %43:f32 = convert %42
        %44:i32 = and %x_74, %x_76
        %45:f32 = convert %44
        %46:vec4<f32> = construct %x_63, %43, %45, %x_80
        store %x_GLF_color, %46
        exit_if  # if_1
      }
    }
    ret
  }
}
%tint_symbol = @fragment func(%gl_FragCoord_param:vec4<f32> [@position]):main_out -> %b5 {
  %b5 = block {
    store %gl_FragCoord, %gl_FragCoord_param
    %49:void = call %main_1
    %50:vec4<f32> = load %x_GLF_color
    %51:main_out = construct %50
    ret %51
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
