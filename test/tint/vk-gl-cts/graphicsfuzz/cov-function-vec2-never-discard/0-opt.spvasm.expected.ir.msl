SKIP: FAILED

<dawn>/src/tint/lang/msl/writer/printer/printer.cc:355 internal compiler error: strided_arr = struct @align(4) {
  el:f32 @offset(0)
}

buf1 = struct @align(4) {
  x_GLF_uniform_float_values:array<strided_arr, 2> @offset(0)
}

buf2 = struct @align(4) {
  zero:f32 @offset(0)
}

strided_arr_1 = struct @align(4) {
  el:i32 @offset(0)
}

buf0 = struct @align(4) {
  x_GLF_uniform_int_values:array<strided_arr_1, 2> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

%b1 = block {  # root
  %x_8:ptr<uniform, buf1, read> = var @binding_point(0, 1)
  %x_10:ptr<uniform, buf2, read> = var @binding_point(0, 2)
  %gl_FragCoord:ptr<private, vec4<f32>, read_write> = var
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
  %x_13:ptr<uniform, buf0, read> = var @binding_point(0, 0)
}

%func_vf2_ = func(%pos:ptr<function, vec2<f32>, read_write>):bool -> %b2 {
  %b2 = block {
    %8:f32 = load_vector_element %pos, 0u
    %9:ptr<uniform, f32, read> = access %x_8, 0u, 0i, 0u
    %10:f32 = load %9
    %11:bool = lt %8, %10
    if %11 [t: %b3] {  # if_1
      %b3 = block {  # true
        ret true
      }
    }
    %12:f32 = load_vector_element %pos, 1u
    %13:ptr<uniform, f32, read> = access %x_8, 0u, 0i, 0u
    %14:f32 = load %13
    %15:bool = gt %12, %14
    if %15 [t: %b4] {  # if_2
      %b4 = block {  # true
        ret false
      }
    }
    %16:ptr<uniform, f32, read> = access %x_10, 0u
    %17:f32 = load %16
    %18:ptr<uniform, f32, read> = access %x_8, 0u, 1i, 0u
    %19:f32 = load %18
    %20:bool = gt %17, %19
    if %20 [t: %b5] {  # if_3
      %b5 = block {  # true
        ret true
      }
    }
    ret true
  }
}
%main_1 = func():void -> %b6 {
  %b6 = block {
    %param:ptr<function, vec2<f32>, read_write> = var
    %23:vec4<f32> = load %gl_FragCoord
    %24:vec2<f32> = swizzle %23, xy
    store %param, %24
    %x_44:bool = call %func_vf2_, %param
    if %x_44 [t: %b7] {  # if_4
      %b7 = block {  # true
        discard
        exit_if  # if_4
      }
    }
    %26:ptr<uniform, i32, read> = access %x_13, 0u, 0i, 0u
    %27:i32 = load %26
    %28:f32 = convert %27
    %29:ptr<uniform, i32, read> = access %x_13, 0u, 1i, 0u
    %30:i32 = load %29
    %31:f32 = convert %30
    %32:ptr<uniform, i32, read> = access %x_13, 0u, 1i, 0u
    %33:i32 = load %32
    %34:f32 = convert %33
    %35:ptr<uniform, i32, read> = access %x_13, 0u, 0i, 0u
    %36:i32 = load %35
    %37:f32 = convert %36
    %38:vec4<f32> = construct %28, %31, %34, %37
    store %x_GLF_color, %38
    ret
  }
}
%tint_symbol = @fragment func(%gl_FragCoord_param:vec4<f32> [@position]):main_out -> %b8 {
  %b8 = block {
    store %gl_FragCoord, %gl_FragCoord_param
    %41:void = call %main_1
    %42:vec4<f32> = load %x_GLF_color
    %43:main_out = construct %42
    ret %43
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
