SKIP: FAILED

<dawn>/src/tint/lang/msl/writer/printer/printer.cc:355 internal compiler error: strided_arr = struct @align(4) {
  el:i32 @offset(0)
}

buf0 = struct @align(4) {
  x_GLF_uniform_int_values:array<strided_arr, 2> @offset(0)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

%b1 = block {  # root
  %x_6:ptr<uniform, buf0, read> = var @binding_point(0, 0)
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
}

%main_1 = func():void -> %b2 {
  %b2 = block {
    %a:ptr<function, i32, read_write> = var
    store %a, 1i
    loop [b: %b3, c: %b4] {  # loop_1
      %b3 = block {  # body
        %5:i32 = load %a
        %6:ptr<uniform, i32, read> = access %x_6, 0u, 0i, 0u
        %7:i32 = load %6
        %8:bool = gte %5, %7
        if %8 [t: %b5] {  # if_1
          %b5 = block {  # true
            exit_loop  # loop_1
          }
        }
        if true [t: %b6] {  # if_2
          %b6 = block {  # true
            discard
            exit_if  # if_2
          }
        }
        %9:i32 = load %a
        %10:i32 = add %9, 1i
        store %a, %10
        continue %b4
      }
      %b4 = block {  # continuing
        %x_39:i32 = load %a
        %12:bool = neq %x_39, 1i
        %13:bool = eq %12, false
        break_if %13 %b3
      }
    }
    %14:i32 = load %a
    %15:bool = eq %14, 1i
    if %15 [t: %b7, f: %b8] {  # if_3
      %b7 = block {  # true
        %16:ptr<uniform, i32, read> = access %x_6, 0u, 0i, 0u
        %17:i32 = load %16
        %18:f32 = convert %17
        %19:ptr<uniform, i32, read> = access %x_6, 0u, 0i, 0u
        %20:i32 = load %19
        %21:f32 = convert %20
        %22:ptr<uniform, i32, read> = access %x_6, 0u, 1i, 0u
        %23:i32 = load %22
        %24:f32 = convert %23
        %25:vec4<f32> = construct 1.0f, %18, %21, %24
        store %x_GLF_color, %25
        exit_if  # if_3
      }
      %b8 = block {  # false
        %26:ptr<uniform, i32, read> = access %x_6, 0u, 0i, 0u
        %27:i32 = load %26
        %28:f32 = convert %27
        %29:vec4<f32> = construct %28
        store %x_GLF_color, %29
        exit_if  # if_3
      }
    }
    ret
  }
}
%tint_symbol = @fragment func():main_out -> %b9 {
  %b9 = block {
    %31:void = call %main_1
    %32:vec4<f32> = load %x_GLF_color
    %33:main_out = construct %32
    ret %33
  }
}

unhandled variable address space
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
